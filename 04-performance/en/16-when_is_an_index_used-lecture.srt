1
00:00:00,000 --> 00:00:00,170

2
00:00:00,170 --> 00:00:02,060
We've learned about the Explain
command, which is how

3
00:00:02,060 --> 00:00:03,970
we figure out what the
database is doing

4
00:00:03,970 --> 00:00:05,360
when it does a query.

5
00:00:05,360 --> 00:00:07,670
But what does the database do
to figure out which index it

6
00:00:07,670 --> 00:00:09,150
should use?

7
00:00:09,150 --> 00:00:12,130
Let's say you have a collection
with three

8
00:00:12,130 --> 00:00:14,960
different indexes on it-- an
index on A, an index on B, and

9
00:00:14,960 --> 00:00:18,750
an index on C. We'll call that
query plan one, query plan

10
00:00:18,750 --> 00:00:20,580
two, and query plan three.

11
00:00:20,580 --> 00:00:25,150
And you specify A, B, and
C, all three of them,

12
00:00:25,150 --> 00:00:26,370
when you do a query.

13
00:00:26,370 --> 00:00:28,750
Now, the database can use this
index, or it could use this

14
00:00:28,750 --> 00:00:29,960
index, or it could
use this index.

15
00:00:29,960 --> 00:00:31,490
It can't use up all three.

16
00:00:31,490 --> 00:00:32,830
It can only use one of them.

17
00:00:32,830 --> 00:00:36,500
What it does the first time we
do this query, it'll run those

18
00:00:36,500 --> 00:00:38,410
three query plans in parallel.

19
00:00:38,410 --> 00:00:41,950
And time will start, and these
query plans are running.

20
00:00:41,950 --> 00:00:46,650
And as soon as one completes,
then Mongo will return the

21
00:00:46,650 --> 00:00:50,460
answer to the query and memorize
that it is in fact

22
00:00:50,460 --> 00:00:53,950
query plan two, which uses
index B. That's going to

23
00:00:53,950 --> 00:00:56,030
satisfy those types
of queries.

24
00:00:56,030 --> 00:00:58,380
And this is kind of cool because
it's basically running

25
00:00:58,380 --> 00:01:01,950
experiments on your actual data
to figure out which index

26
00:01:01,950 --> 00:01:03,350
it should use.

27
00:01:03,350 --> 00:01:04,920
And you don't have to do
anything to make this happen,

28
00:01:04,920 --> 00:01:06,480
it just happens behind
the scenes.

29
00:01:06,480 --> 00:01:09,650
But I just wanted you to
understand that broadly.

30
00:01:09,650 --> 00:01:13,090
And every hundred or so queries
it will forget what it

31
00:01:13,090 --> 00:01:16,110
knows, and it will run another
experiment if it has to, to

32
00:01:16,110 --> 00:01:19,290
choose between those
indexes again.

33
00:01:19,290 --> 00:01:22,650
Just to review, if you have
a compound index on--

34
00:01:22,650 --> 00:01:24,670
I'm going to do it differently
this time--

35
00:01:24,670 --> 00:01:29,470
on D, C, B, A in that order--

36
00:01:29,470 --> 00:01:32,100
if you have a compound index,
then in order for the database

37
00:01:32,100 --> 00:01:37,100
to use this index, you have to
specify some left subset of

38
00:01:37,100 --> 00:01:38,050
these items.

39
00:01:38,050 --> 00:01:40,665
So if you specify just D,
it can use the index.

40
00:01:40,665 --> 00:01:43,880
If you specify D and
C, it can use it.

41
00:01:43,880 --> 00:01:47,760
If you specify D and B, it can
use it but it only really uses

42
00:01:47,760 --> 00:01:48,970
the D part.

43
00:01:48,970 --> 00:01:56,070
If you specify C and B, it
cannot use it because it

44
00:01:56,070 --> 00:01:58,140
didn't have the D
part included.

45
00:01:58,140 --> 00:02:01,470
And this is true whether or not
it's using it to do a sort

46
00:02:01,470 --> 00:02:04,200
or whether or not it's using
it to do a find.

47
00:02:04,200 --> 00:02:06,660
And although I didn't say this
explicitly, you should realize

48
00:02:06,660 --> 00:02:13,330
of course that find, findOne,
update, and remove can all

49
00:02:13,330 --> 00:02:15,630
benefit from indexes.

50
00:02:15,630 --> 00:02:17,600
OK, let's do a quick quiz.

51
00:02:17,600 --> 00:02:20,170
This should be kind
of review for you.

52
00:02:20,170 --> 00:02:22,740
Given the collection foo with
the following index, A, B, and

53
00:02:22,740 --> 00:02:25,670
C, which of the following
queries will use the index?

54
00:02:25,670 --> 00:02:28,240
And you can see the
four choices here.

55
00:02:28,240 --> 00:02:29,490
Check all that apply.

56
00:02:29,490 --> 00:02:30,320