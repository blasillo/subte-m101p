1
00:00:00,000 --> 00:00:00,120

2
00:00:00,120 --> 00:00:02,500
La idea de "sharding" es que
no tienes que pensar sobre

3
00:00:02,500 --> 00:00:05,400
ello como un desarrollador,
en términos de que la colección

4
00:00:05,400 --> 00:00:07,640
esté dividida horizontalmente
en varios nodos.

5
00:00:07,640 --> 00:00:10,150
Pero en realidad, hay algunas
cosas que tienes que tener

6
00:00:10,150 --> 00:00:13,070
en mente una vez que estás
en un ambiente con "shards".

7
00:00:13,070 --> 00:00:17,810
La primera es que cada documento
tiene que tener la clave de

8
00:00:17,810 --> 00:00:19,100
"shard".

9
00:00:19,100 --> 00:00:21,240
La segunda es que la clave
de "shard" es inmutable.

10
00:00:21,240 --> 00:00:24,560
OK. Entonces, una vez que pones
la clave de "shard" dentro de

11
00:00:24,560 --> 00:00:25,800
un documento, no la
puedes cambiar.

12
00:00:25,800 --> 00:00:28,770
Así que tienes que pensar
bien sobre dónde la pones.

13
00:00:28,770 --> 00:00:31,650
Lo siguiente es que necesitas
un índice que comience

14
00:00:31,650 --> 00:00:32,940
con la clave de "shard".

15
00:00:32,940 --> 00:00:39,290
Eso significa que si la clave
de "shard" es "student_id",

16
00:00:39,290 --> 00:00:41,800
el índice puede ser
"student_id" coma "class"

17
00:00:41,800 --> 00:00:42,660
y eso estaría bien.

18
00:00:42,660 --> 00:00:45,064
Eso va a satisfacer el
hecho que necesitas

19
00:00:45,064 --> 00:00:47,130
un índice sobre la
clave de "shard".

20
00:00:47,130 --> 00:00:49,870
El índice que satisface
este requerimiento no

21
00:00:49,870 --> 00:00:51,410
puede ser un índice
de claves múltiples

22
00:00:51,410 --> 00:00:53,830
Así que si es un índice de
claves múltiples, vas a

23
00:00:53,830 --> 00:00:56,260
necesitar otro índice sobre la
clave de "shard" que comience

24
00:00:56,260 --> 00:00:59,010
con la clave de "shard" para
satisfacer este requerimiento.

25
00:00:59,010 --> 00:01:01,760
Cuando hagas un "update", vas a tener
que especificar la clave de "shard"

26
00:01:01,760 --> 00:01:03,410
o especificar que
"multi" es "true".

27
00:01:03,410 --> 00:01:06,640
Así que tienes que especificar la
clave de shard o habilitar "multi".

28
00:01:06,640 --> 00:01:09,680
Por si acaso, si haces "multi"
o no especificas la clave de

29
00:01:09,680 --> 00:01:11,740
"shard" en el "update" cuando
haces "multi", entonces va a

30
00:01:11,740 --> 00:01:14,090
enviar el "update" a
todos los nodos.

31
00:01:14,090 --> 00:01:18,570
Generalmente hablando, cuando
envías una consulta que no

32
00:01:18,570 --> 00:01:20,630
incluye la clave de
"shard", va a enviarla

33
00:01:20,630 --> 00:01:21,440
a todos los nodos.

34
00:01:21,440 --> 00:01:26,120
Si falta la clave de "shard", significa que la
operación es de dispersión y recopilación, lo

35
00:01:26,120 --> 00:01:27,270
cual es caro.

36
00:01:27,270 --> 00:01:30,120
Así que vas a tener que pensar
bien cuando crees la clave de

37
00:01:30,120 --> 00:01:33,040
"shard" y estés haciéndole
"sharding" a la colección.

38
00:01:33,040 --> 00:01:35,630
¿Qué clave voy a utilizar en
la mayoría de consultas?

39
00:01:35,630 --> 00:01:37,160
Porque ésa es la clave
que quiero tener como

40
00:01:37,160 --> 00:01:38,600
clave de "shard".

41
00:01:38,600 --> 00:01:40,810
Éstas son algunas de
las cosas de "sharding"

42
00:01:40,810 --> 00:01:43,090
que tienes que considerar
cuando desarrollas.

43
00:01:43,090 --> 00:01:46,770
Otra, que no es tan
obvia, es que no puedes

44
00:01:46,770 --> 00:01:53,670
tener una clave única, ningún
índice único, al menos que

45
00:01:53,670 --> 00:01:54,920
también sea parte de
la clave de "shard".

46
00:01:54,920 --> 00:01:57,670

47
00:01:57,670 --> 00:01:59,650
Y la razón es que--

48
00:01:59,650 --> 00:02:01,840
o comienza con la clave
de "shard" debería decir.

49
00:02:01,840 --> 00:02:04,615
Si la clave de shard es "student_id"
coma "class", entonces puedes tener

50
00:02:04,615 --> 00:02:07,100
un índice único sobre "student_id"
coma "class" coma algo diferente,

51
00:02:07,100 --> 00:02:09,880
lo que significa que
básicamente es único

52
00:02:09,880 --> 00:02:10,820
sobre "student_id" coma "class".

53
00:02:10,820 --> 00:02:14,100
El porqué de este requerimiento
es que no hay manera de

54
00:02:14,100 --> 00:02:18,020
imponer la singularidad
de cualquier índice que

55
00:02:18,020 --> 00:02:20,010
no incluya la clave de
"shard" porque no sabe

56
00:02:20,010 --> 00:02:23,710
si existen copias en
diferentes "shards".

57
00:02:23,710 --> 00:02:26,970
Porque los índices están
en cada "shard".

58
00:02:26,970 --> 00:02:29,410
Así que no hay ninguna manera
colectiva para que la base de

59
00:02:29,410 --> 00:02:32,890
datos sepa si es que la condición
de singularidad va ser satisfecha.

60
00:02:32,890 --> 00:02:34,570
Muy bien. Éstas son algunas
de las repercusiones de

61
00:02:34,570 --> 00:02:37,120
"sharding" como desarrollador.

62
00:02:37,120 --> 00:02:39,632
Tienes que tenerlas en mente
cuando escribas consultas en

63
00:02:39,632 --> 00:02:40,400
un ambiente con "shards".

64
00:02:40,400 --> 00:02:41,620
Hora de un cuestionario.

65
00:02:41,620 --> 00:02:44,140
Digamos que quieres hacer "shard"
a la colección "zipcode" después

66
00:02:44,140 --> 00:02:45,170
de importarla.

67
00:02:45,170 --> 00:02:47,420
Quieres hacer "shard"
sobre el mismo "zipcode".

68
00:02:47,420 --> 00:02:50,065
¿Qué índice necesitarías para
que MongoDB pueda ordenar

69
00:02:50,065 --> 00:02:50,820
de acuerdo a "zipcode"?

70
00:02:50,820 --> 00:02:54,180
¿Un índice en "zipcode" o
un índice no-múltiple que

71
00:02:54,180 --> 00:02:57,580
comience con "zip", ningún
índice se requiere para usar

72
00:02:57,580 --> 00:03:00,240
"zip" como clave de "shard",
un índice único en "zipcode",

73
00:03:00,240 --> 00:03:01,820
o cualquier índice que
incluya "zipcode"?

74
00:03:01,820 --> 00:03:03,220
¿Cuál crees que
es la respuesta?

75
00:03:03,220 --> 00:03:04,470
