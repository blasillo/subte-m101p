1
00:00:00,000 --> 00:00:00,130

2
00:00:00,130 --> 00:00:02,300
Vamos a ver cómo crear un
ambiente con "shards".

3
00:00:02,300 --> 00:00:05,770
Esto probablemente les
corresponde más a los

4
00:00:05,770 --> 00:00:09,550
DBAs, pero si quieres desarrollar en
tu propio computador y experimentar

5
00:00:09,550 --> 00:00:11,860
con ambientes con
"shards", vas a tener

6
00:00:11,860 --> 00:00:12,930
que hacer esto.

7
00:00:12,930 --> 00:00:14,860
Al comienzo es un poco
sobrecogedor, pero no

8
00:00:14,860 --> 00:00:16,790
es tan complicado como parece.

9
00:00:16,790 --> 00:00:19,380
Una vez que hayamos repasado
el proceso, espero que puedas

10
00:00:19,380 --> 00:00:20,280
hacerlo tú mismo.

11
00:00:20,280 --> 00:00:23,120
Definitivamente te sugiero que
descargues el script que escribí

12
00:00:23,120 --> 00:00:25,710
y lo ejecutes en tu computadora.

13
00:00:25,710 --> 00:00:28,140
Y si no funciona, simplemente
experimenta un poco y

14
00:00:28,140 --> 00:00:30,240
no tardarás en
hacerlo funcionar.

15
00:00:30,240 --> 00:00:31,280
Vamos a crear un ambiente

16
00:00:31,280 --> 00:00:33,400
con dos "shards"

17
00:00:33,400 --> 00:00:36,760
y cada uno va a ser un
conjunto de réplicas.

18
00:00:36,760 --> 00:00:39,270
Éste va a ser el "shard0".

19
00:00:39,270 --> 00:00:42,520
El "shard0" va a contener
este conjunto de réplicas

20
00:00:42,520 --> 00:00:44,010
con estos tres nodos.

21
00:00:44,010 --> 00:00:45,550
Voy a poner "r"
por "replica set".

22
00:00:45,550 --> 00:00:49,130
Luego vamos a crear
otro, "shard1"

23
00:00:49,130 --> 00:00:53,190
y va a tener su propio conjunto
de réplicas con tres mongod.

24
00:00:53,190 --> 00:00:54,490
Éstos van a ejecutarse
todos en mi computadora.

25
00:00:54,490 --> 00:00:57,410
Nunca harías eso
en la vida real.

26
00:00:57,410 --> 00:00:59,380
Vamos a tener que
modificar los puertos,

27
00:00:59,380 --> 00:01:01,245
porque obviamente no
puedes reusar el mismo

28
00:01:01,245 --> 00:01:02,450
puerto en la misma máquina.

29
00:01:02,450 --> 00:01:05,300
Probablemente no harías

30
00:01:05,300 --> 00:01:06,450
esto en la vida real.

31
00:01:06,450 --> 00:01:08,490
Luego, no he hablado sobre
esto aún, pero vas a

32
00:01:08,490 --> 00:01:10,330
necesitar algunos
servidores "config".

33
00:01:10,330 --> 00:01:13,780
Estos "config" son pequeños
servidores mongo que mantienen

34
00:01:13,780 --> 00:01:15,920
un registro de la ubicación
de los diferentes "shards"

35
00:01:15,920 --> 00:01:18,930
y no son un conjunto
de réplicas.

36
00:01:18,930 --> 00:01:21,530
Hay un tipo de protocolo

37
00:01:21,530 --> 00:01:22,680
de entendimiento entre ellos

38
00:01:22,680 --> 00:01:24,080
y hay un proceso de anotación
de dos fases cuando quieres

39
00:01:24,080 --> 00:01:25,300
cambiar algo.

40
00:01:25,300 --> 00:01:27,380
En producción,
típicamente usas tres.

41
00:01:27,380 --> 00:01:29,710
En desarrollo, puedes
simplemente usar uno,

42
00:01:29,710 --> 00:01:32,200
pero yo voy a usar tres
por que es buena práctica.

43
00:01:32,200 --> 00:01:34,930
Una vez más, éstos también
son procesos mongod.

44
00:01:34,930 --> 00:01:36,660
Entonces puedes ver aquí,
tengo 1, 2, 3, 4, 5, 6, 7,

45
00:01:36,660 --> 00:01:38,470
8, 9 procesos mongods.

46
00:01:38,470 --> 00:01:41,150
Además, tengo mi
router--mi mongos--

47
00:01:41,150 --> 00:01:42,820
éste va a comunicarse
con el resto

48
00:01:42,820 --> 00:01:45,110
y luego, mi aplicación, acá,

49
00:01:45,110 --> 00:01:47,280
se comunicará con mi mongos.

50
00:01:47,280 --> 00:01:47,560
Bien.

51
00:01:47,560 --> 00:01:50,290
Hay que comenzar y ver
cómo haríamos esto.

52
00:01:50,290 --> 00:01:52,580
Lo primero es que tienes
que averiguar dónde vas

53
00:01:52,580 --> 00:01:53,720
a poner tus datos.

54
00:01:53,720 --> 00:01:57,010
Yo lo pongo en "/data"
en mi computadora.

55
00:01:57,010 --> 00:01:58,430
Ahí estoy.

56
00:01:58,430 --> 00:02:00,670
La manera en que decidí
hacerlo es crear tres

57
00:02:00,670 --> 00:02:02,770
subdirectorios--"shard0" y "shard1".

58
00:02:02,770 --> 00:02:04,730
En realidad creé uno para
"shard2", pero no terminé

59
00:02:04,730 --> 00:02:05,850
creando nada ahí.

60
00:02:05,850 --> 00:02:09,360
Y en "shard0", tengo un
directorio para conjunto

61
00:02:09,360 --> 00:02:12,490
de réplicas 0, 1 y 2.

62
00:02:12,490 --> 00:02:14,670
En realidad este es el primer
nodo del conjunto de réplicas,

63
00:02:14,670 --> 00:02:16,180
éste el segundo y éste el tercero.

64
00:02:16,180 --> 00:02:19,390
Luego, en "shard2"
tengo lo mismo--

65
00:02:19,390 --> 00:02:20,060
digo "shard1"--

66
00:02:20,060 --> 00:02:20,840
lo mismo.

67
00:02:20,840 --> 00:02:22,300
Comienzan vacíos,

68
00:02:22,300 --> 00:02:25,040
pero en estos directorios
mongo va a poner los

69
00:02:25,040 --> 00:02:27,100
directorios de datos
para estos nodos

70
00:02:27,100 --> 00:02:28,330
del conjunto de réplicas.

71
00:02:28,330 --> 00:02:30,990
Luego hago lo mismo para
el servidor "config".

72
00:02:30,990 --> 00:02:33,750
Déjame mostrarte mi script
y verás cómo funciona.

73
00:02:33,750 --> 00:02:34,670
Bien.

74
00:02:34,670 --> 00:02:37,000
Creé un script llamado
"init_sharded_env.sh".

75
00:02:37,000 --> 00:02:39,620

76
00:02:39,620 --> 00:02:41,940
Es esencialmente
un script bash.

77
00:02:41,940 --> 00:02:45,500
Vas a tener que disculparme porque 
es más ancho que esta ventana,

78
00:02:45,500 --> 00:02:47,080
y va a ser un poco
difícil de leer.

79
00:02:47,080 --> 00:02:50,280
Pero es fácil de entender.

80
00:02:50,280 --> 00:02:51,850
Lo primero que vamos
a hacer es crear un

81
00:02:51,850 --> 00:02:54,100
conjunto de réplicas y
decirle que va a ser un shard.

82
00:02:54,100 --> 00:02:56,050
¿Cómo hacemos eso?

83
00:02:56,050 --> 00:02:58,440
Primero, creé los directorios:

84
00:02:58,440 --> 00:03:03,420
"shard0/rs0", "shard0/rs1",
y "shard0/rs2".

85
00:03:03,420 --> 00:03:06,200
Luego creé un conjunto
de réplicas normal.

86
00:03:06,200 --> 00:03:09,470
Lo creé y le dije que es
un conjunto de réplicas y

87
00:03:09,470 --> 00:03:11,420
aquí está la ruta de su log.

88
00:03:11,420 --> 00:03:14,570
Le doy un archivo de log para
mantener un registro de ellos.

89
00:03:14,570 --> 00:03:16,180
Aquí esta la ruta de los datos.

90
00:03:16,180 --> 00:03:19,680
Le he dado un puerto. Estos
servidores se ejecutan en los

91
00:03:19,680 --> 00:03:23,210
puertos 37017, 37018 y 37019.

92
00:03:23,210 --> 00:03:24,210
Le he dicho que haga "fork"

93
00:03:24,210 --> 00:03:25,690
y que eventualmente va a ser

94
00:03:25,690 --> 00:03:26,930
un servidor "shard".

95
00:03:26,930 --> 00:03:28,940
Tienes que hacer eso
para que funcione.

96
00:03:28,940 --> 00:03:32,600
Tiene la señal "--replSet" y

97
00:03:32,600 --> 00:03:33,880
la señal "--shardsvr".

98
00:03:33,880 --> 00:03:37,220
Cuando inicies estos tres
servidores, aún no saben

99
00:03:37,220 --> 00:03:39,270
que son un conjunto de réplicas

100
00:03:39,270 --> 00:03:41,870
y esto es lo mismo
que la última vez.

101
00:03:41,870 --> 00:03:46,270
La siguiente parte
del script es algo

102
00:03:46,270 --> 00:03:49,570
que les va parecer conocido a
los programadores shell de antaño.

103
00:03:49,570 --> 00:03:50,820
Se llama un documento "here".

104
00:03:50,820 --> 00:03:53,300
Básicamente, te dice que
que invoque a mongo,

105
00:03:53,300 --> 00:03:54,890
es este shell mongo,

106
00:03:54,890 --> 00:03:57,240
y se conecte a 37017.

107
00:03:57,240 --> 00:03:59,150
Se va a conectar a éste

108
00:03:59,150 --> 00:04:06,520
y va a tomar este documento,
de aquí hasta aquí y ejecutarlo

109
00:04:06,520 --> 00:04:09,370
como entrada estándar
del shell mongo.

110
00:04:09,370 --> 00:04:12,930
Éste es el comando
que va a crear el

111
00:04:12,930 --> 00:04:13,760
conjunto de réplicas.

112
00:04:13,760 --> 00:04:16,240
No quise hacer un archivo
JS separado, así que puse

113
00:04:16,240 --> 00:04:17,940
todo en el mismo script.

114
00:04:17,940 --> 00:04:19,480
Básicamente, es un
archivo de configuración.

115
00:04:19,480 --> 00:04:21,220
Dice "s0".

116
00:04:21,220 --> 00:04:26,640
Aquí están mis miembros
en 37017, 37018 y 37019.

117
00:04:26,640 --> 00:04:29,290
Y va a crear un documento
"config" y llamar a

118
00:04:29,290 --> 00:04:30,230
"rs.initiate".

119
00:04:30,230 --> 00:04:31,450
Eso es todo.

120
00:04:31,450 --> 00:04:35,780
Ahora, uno de los conjuntos
de réplicas que va a formar

121
00:04:35,780 --> 00:04:38,640
parte de mi "shard0"
está ejecutándose.

122
00:04:38,640 --> 00:04:41,250
Hago lo mismo para el "shard1".

123
00:04:41,250 --> 00:04:44,120
Creo los directorios de
datos, si no existen aún,

124
00:04:44,120 --> 00:04:48,320
"shard1/rs0", "shard1/rs1"
y "shard2/rs1".

125
00:04:48,320 --> 00:04:54,880
Luego inicio estos tres
servidores con "--replSet" s1,

126
00:04:54,880 --> 00:04:58,570
porque éstos van a ser parte
del conjunto de réplicas s1,

127
00:04:58,570 --> 00:05:00,190
el cual va a ser "shard1".

128
00:05:00,190 --> 00:05:03,970
Voy a darle las rutas de los
logs y la ruta correcta para

129
00:05:03,970 --> 00:05:05,400
los datos de cada servidor.

130
00:05:05,400 --> 00:05:08,290
Creo estos puertos asegurándome
que no estén en conflicto, en

131
00:05:08,290 --> 00:05:12,570
este caso 47017, 47018 y 47019,

132
00:05:12,570 --> 00:05:14,915
e incluyo la opción "--shardsvr"
para cada uno de ellos.

133
00:05:14,915 --> 00:05:17,590
Una vez más, hago el mismo
truco en este script, es

134
00:05:17,590 --> 00:05:19,770
decir, lo ejecuto en Bash.

135
00:05:19,770 --> 00:05:23,820
Simplemente especifico que
quiero ejecutar mongo y 

136
00:05:23,820 --> 00:05:26,630
conectarme a 47017,
el cual es el primero

137
00:05:26,630 --> 00:05:31,190
y que por favor ingrese al
shell mongo este documento

138
00:05:31,190 --> 00:05:32,830
aquí, el cual va a iniciar

139
00:05:32,830 --> 00:05:34,910
el segundo conjunto de réplicas.

140
00:05:34,910 --> 00:05:38,370
En este momento tengo dos conjuntos
de réplicas, pero ahora necesito

141
00:05:38,370 --> 00:05:41,270
iniciar mis servidores config
para que pueda iniciar

142
00:05:41,270 --> 00:05:42,870
todo esto.

143
00:05:42,870 --> 00:05:46,050
Hago eso aquí.

144
00:05:46,050 --> 00:05:48,300
Creo tres directorios diferentes
para mis servidores config

145
00:05:48,300 --> 00:05:50,710
con este comando mkdir--

146
00:05:50,710 --> 00:05:52,610
uno para cada mongod--

147
00:05:52,610 --> 00:05:56,220
y luego ejecuto estos
tres comandos mongod

148
00:05:56,220 --> 00:05:57,990
y una vez más les doy puertos
que no estén en conflicto--

149
00:05:57,990 --> 00:06:02,360
57017, 57018, 57019

150
00:06:02,360 --> 00:06:04,090
y les digo que hagan "fork"

151
00:06:04,090 --> 00:06:06,990
y le digo que es un
servidor config.

152
00:06:06,990 --> 00:06:07,550
¿OK?

153
00:06:07,550 --> 00:06:11,150
Ahora, tenemos las
tres piezas, pero no

154
00:06:11,150 --> 00:06:12,380
están trabajando juntas.

155
00:06:12,380 --> 00:06:13,460
Tenemos dos conjuntos de réplicas.

156
00:06:13,460 --> 00:06:14,840
Han sido iniciados.

157
00:06:14,840 --> 00:06:16,190
Tenemos servidores config.

158
00:06:16,190 --> 00:06:18,700
¿Pero qué tenemos que hacer
para que esto funcione?

159
00:06:18,700 --> 00:06:23,230
Lo que yo hago es comenzar
el mongos en el puerto estándar.

160
00:06:23,230 --> 00:06:24,780
No hay un número de puerto acá.

161
00:06:24,780 --> 00:06:28,220
Le digo que éste es
la ruta de su log y

162
00:06:28,220 --> 00:06:30,880
le digo dónde están
los servidores config.

163
00:06:30,880 --> 00:06:33,470
La manera en que mongos funciona
es que le dices dónde están los

164
00:06:33,470 --> 00:06:34,830
servidores config.

165
00:06:34,830 --> 00:06:38,650
Ahora, tengo que hacer
que todo esto funcione.

166
00:06:38,650 --> 00:06:45,560
Lo que tengo que hacer
es llamar a mongo sin

167
00:06:45,560 --> 00:06:46,700
especificar ningún puerto.

168
00:06:46,700 --> 00:06:49,880
Lo que va a ocurrir es que
se va a conectar al mongos

169
00:06:49,880 --> 00:06:53,630
porque el mongos está
corriendo continuamente en

170
00:06:53,630 --> 00:06:55,070
el puerto estándar de mongod.

171
00:06:55,070 --> 00:06:57,250
Es algo extraño pensar
que está corriendo

172
00:06:57,250 --> 00:06:59,110
en un puerto mongod,
pero eso es lo que hace.

173
00:06:59,110 --> 00:07:02,590
Si tienes una aplicación en
mongo, va a reemplazar a

174
00:07:02,590 --> 00:07:03,400
mongo y redireccionar.

175
00:07:03,400 --> 00:07:05,730
Así que los lista en el puerto
estándar en este caso.

176
00:07:05,730 --> 00:07:07,550
Una pequeña advertencia--

177
00:07:07,550 --> 00:07:11,670
traté, en mi Mac, de no usar
el puerto estándar para el

178
00:07:11,670 --> 00:07:14,290
mongos y listarlo en otro
puerto, pero nunca logré

179
00:07:14,290 --> 00:07:14,930
que funcione.

180
00:07:14,930 --> 00:07:17,680
El problema era que lograba
que esta parte funcione.

181
00:07:17,680 --> 00:07:20,980
Logré hacer que el mongos se
ejecute, pero no podías hacer

182
00:07:20,980 --> 00:07:21,800
que mongo se conecte a él.

183
00:07:21,800 --> 00:07:24,860
Así que me rendí y lo hice
en el puerto estándar,

184
00:07:24,860 --> 00:07:26,540
lo cual de todas maneras
es una buena idea.

185
00:07:26,540 --> 00:07:27,730
Pero sólo para que sepas--

186
00:07:27,730 --> 00:07:29,850
no sé si es un defecto o si
tiene que ver con el hecho

187
00:07:29,850 --> 00:07:30,980
que todo está en localhost,

188
00:07:30,980 --> 00:07:32,450
pero no funcionó.

189
00:07:32,450 --> 00:07:32,880
Está bien.

190
00:07:32,880 --> 00:07:34,260
Funciona de esta manera.

191
00:07:34,260 --> 00:07:37,760
Una vez más, ejecuto
el shell mongo y

192
00:07:37,760 --> 00:07:39,540
envío todo aquí.

193
00:07:39,540 --> 00:07:42,950
Ahora, éstos son los comandos
para agregar estos dos "shards".

194
00:07:42,950 --> 00:07:45,670
Esto es lo que hace que todo
funcione como conjunto.

195
00:07:45,670 --> 00:07:48,460
Así que el shell mongo
está hablándole al mongos.

196
00:07:48,460 --> 00:07:51,100
El mongos sabe de la existencia
de los servidores config.

197
00:07:51,100 --> 00:07:54,060
El problema es que los servidores
config no saben sobre la existencia

198
00:07:54,060 --> 00:07:56,130
de los "shards", los cuales
son conjuntos de réplicas.

199
00:07:56,130 --> 00:07:57,360
Tienen que saber sobre ellos.

200
00:07:57,360 --> 00:08:01,260
Esto hace que todo
funcione como conjunto.

201
00:08:01,260 --> 00:08:02,640
"db.adminCommand",

202
00:08:02,640 --> 00:08:09,810
agrega un "shard", "s0/" y uno
de los hosts que contiene.

203
00:08:09,810 --> 00:08:11,960
Esto es esencialmente
una lista de semillas.

204
00:08:11,960 --> 00:08:14,430
Esto es una lista
de semillas y va

205
00:08:14,430 --> 00:08:15,480
a descubrir el resto.

206
00:08:15,480 --> 00:08:19,130
Luego otro "shard", "s1".

207
00:08:19,130 --> 00:08:21,040
Una vez más, esto es
una list de semillas.

208
00:08:21,040 --> 00:08:23,470
Si le damos uno de los nodos
del conjunto de réplicas, va

209
00:08:23,470 --> 00:08:24,680
a descubrir el resto.

210
00:08:24,680 --> 00:08:26,340
Luego tengo que habilitar
"sharding" en una base de

211
00:08:26,340 --> 00:08:27,190
datos, así que lo hice.

212
00:08:27,190 --> 00:08:29,160
Lo habilité en la base
de datos "test".

213
00:08:29,160 --> 00:08:32,280
Luego dije que quería
"shard" la colección

214
00:08:32,280 --> 00:08:35,380
"test.grades", la cual es la
colección que hemos utilizado

215
00:08:35,380 --> 00:08:37,730
en las lecciones anteriores.

216
00:08:37,730 --> 00:08:42,799
Le dije que la clave para
eso es "student_id:1".

217
00:08:42,799 --> 00:08:46,130
Ahora, una advertencia,
si la colección no existe,

218
00:08:46,130 --> 00:08:51,340
mongod no tiene ningún problema
en crearla y también crearía

219
00:08:51,340 --> 00:08:55,470
un índice en "student_id",
sobre el cual voy a hablar

220
00:08:55,470 --> 00:08:56,170
en un segundo.

221
00:08:56,170 --> 00:09:00,000
Es un requerimiento que haya
un índice en el prefijo

222
00:09:00,000 --> 00:09:02,480
inicial de la clave de "shard".

223
00:09:02,480 --> 00:09:06,140
Pero si la colección ya existe
entonces antes de que te deje

224
00:09:06,140 --> 00:09:09,650
hacerla "shard", vas a tener
que haber creado ese índice.

225
00:09:09,650 --> 00:09:11,152
Si tienes una colección nueva,
a la cual nunca le has hecho

226
00:09:11,152 --> 00:09:12,820
nada y sabes desde el
comienzo que vas a

227
00:09:12,820 --> 00:09:15,580
querer hacerle "shard",
eso es algo inusual.

228
00:09:15,580 --> 00:09:17,880
El caso más probable es que

229
00:09:17,880 --> 00:09:20,190
tengas una colección en un
conjunto de réplicas único

230
00:09:20,190 --> 00:09:22,010
y decides que le quieres
hacer "shard".

231
00:09:22,010 --> 00:09:23,920
Lo que vas a hacer es crear

232
00:09:23,920 --> 00:09:26,140
un segundo conjunto de réplicas,
algunos servidores config,

233
00:09:26,140 --> 00:09:28,370
vas a darle una configuración
de "sharding", vas a habilitar

234
00:09:28,370 --> 00:09:30,710
"sharding" en la base
de datos y luego vas

235
00:09:30,710 --> 00:09:33,300
a tener que asegurarte que
hay un índice en lo que quieres

236
00:09:33,300 --> 00:09:34,960
que sea tu clave de "shard".

237
00:09:34,960 --> 00:09:38,880
Así que en realidad, obtuve
un error cuando hice esto en

238
00:09:38,880 --> 00:09:41,560
el shell porque no había
creado ese índice aún.

239
00:09:41,560 --> 00:09:43,530
Pero en este caso, si estás
ejecutando mi script,

240
00:09:43,530 --> 00:09:46,420
la colección "test.grades"
no va a existir aún,

241
00:09:46,420 --> 00:09:48,050
así que no tendrás
ningún problema.

242
00:09:48,050 --> 00:09:50,170
Pero yo importé la colección
primero, entonces

243
00:09:50,170 --> 00:09:51,590
tuve este problema.

244
00:09:51,590 --> 00:09:52,920
En fin, eso es.

245
00:09:52,920 --> 00:09:54,085
Después de hacer esto,
esto debería estar

246
00:09:54,085 --> 00:09:54,800
ejecutándose.

247
00:09:54,800 --> 00:09:56,920
Lo hice todo en mi computadora.

248
00:09:56,920 --> 00:09:58,890
No lo voy a ejecutar en
este momento porque ya

249
00:09:58,890 --> 00:10:01,120
he importado los datos,
así que sería un poco

250
00:10:01,120 --> 00:10:02,100
inconveniente.

251
00:10:02,100 --> 00:10:04,650
Te voy a mostrar
lo que ocurre

252
00:10:04,650 --> 00:10:07,150
ahora cuando ejecuto mongos.

253
00:10:07,150 --> 00:10:10,120
Si ejecuto mongo--

254
00:10:10,120 --> 00:10:12,070
ah, por si acaso, te lo
estoy mostrando con todo

255
00:10:12,070 --> 00:10:15,040
ya ejecutándose.

256
00:10:15,040 --> 00:10:17,260
Éstos son mis procesos mongod.

257
00:10:17,260 --> 00:10:19,770
Debería haber nueve.

258
00:10:19,770 --> 00:10:22,280
Contémoslos.

259
00:10:22,280 --> 00:10:23,325
Hay 10.

260
00:10:23,325 --> 00:10:25,630
No sé por qué hay 10.

261
00:10:25,630 --> 00:10:27,600
Ah, es el mismo "rep",
ése es el décimo.

262
00:10:27,600 --> 00:10:28,810
Claro.

263
00:10:28,810 --> 00:10:30,390
Así que hay nueve.

264
00:10:30,390 --> 00:10:32,210
Ejecutemos mongo.

265
00:10:32,210 --> 00:10:35,270
Se va a conectar al puerto
por defecto en localhost,

266
00:10:35,270 --> 00:10:38,550
el cual es equivalente a
conectarse con el mongos.

267
00:10:38,550 --> 00:10:41,230
Ahora, por la primera vez,
estás viendo esto, que es

268
00:10:41,230 --> 00:10:43,640
un shell mongo reportando
que está conectado a un mongos

269
00:10:43,640 --> 00:10:45,020
en lugar de un mongod.

270
00:10:45,020 --> 00:10:47,170
Eso es algo nuevo y
deberías tomar nota

271
00:10:47,170 --> 00:10:48,700
de ello.

272
00:10:48,700 --> 00:10:50,690
Esto te dice que estás
conectado a un ambiente

273
00:10:50,690 --> 00:10:52,280
con "shards".

274
00:10:52,280 --> 00:10:55,920
Si veo todos mis comandos
de ayuda para "shards",

275
00:10:55,920 --> 00:10:56,790
veo lo que son.

276
00:10:56,790 --> 00:10:58,990
Por supuesto está el de "help"
que acabo de ejecutar y el de

277
00:10:58,990 --> 00:11:01,160
"addShard", "enableSharding".

278
00:11:01,160 --> 00:11:03,160
Puedo obtener el estado
del sistema de "shards".

279
00:11:03,160 --> 00:11:04,660
Hagamos eso:

280
00:11:04,660 --> 00:11:05,910
"sh.status".

281
00:11:05,910 --> 00:11:08,470

282
00:11:08,470 --> 00:11:10,020
Es algo difícil de leer.

283
00:11:10,020 --> 00:11:13,820
Lo que me está diciendo
es que hay dos "shards"

284
00:11:13,820 --> 00:11:17,460
ejecutándose aquí y cada uno
es un conjunto de réplicas.

285
00:11:17,460 --> 00:11:21,650
Parece que descubrió todos los
hosts en los conjuntos de

286
00:11:21,650 --> 00:11:23,760
réplicas, lo cual tiene sentido,
porque era una lista de semillas,

287
00:11:23,760 --> 00:11:25,330
así que descubrió el resto.

288
00:11:25,330 --> 00:11:28,790
Luego están las bases de datos,
la base de datos "admin",

289
00:11:28,790 --> 00:11:30,610
la cual no está dividida, la
base de datos "test", que está

290
00:11:30,610 --> 00:11:32,130
dividida, es decir,
contiene "shards"

291
00:11:32,130 --> 00:11:34,270
y luego te está diciendo
cuáles son los pedazos.

292
00:11:34,270 --> 00:11:36,120
Hablamos sobre estos pedazos.

293
00:11:36,120 --> 00:11:39,480
Desde "$minKey", el cual
es el "student_id" más bajo

294
00:11:39,480 --> 00:11:41,380
que posiblemente podrías
representar en la base de datos

295
00:11:41,380 --> 00:11:45,270
hasta 1, eso lo va
a poner en "s1".

296
00:11:45,270 --> 00:11:48,610
Luego te muestra, puedes ver
los rangos de "student_id"

297
00:11:48,610 --> 00:11:50,380
y los diferentes "shards"
en los que están.

298
00:11:50,380 --> 00:11:55,910
Si luego voy a la colección
"grades" y le pido sus

299
00:11:55,910 --> 00:11:58,560
estadísticas, también me va
a decir que contiene "shards".

300
00:11:58,560 --> 00:12:02,340
Así que puedes ver aquí
como reporta "sharded"

301
00:12:02,340 --> 00:12:05,800
"true", y que contiene dos
millones de documentos.

302
00:12:05,800 --> 00:12:07,520
Es bastante grande ahora.

303
00:12:07,520 --> 00:12:12,370
Su tamaño es como
432 megabytes, creo.

304
00:12:12,370 --> 00:12:14,140
Bueno, no es tan grande.

305
00:12:14,140 --> 00:12:16,260
Luego, como ves aquí, te
informa sobre los "shards"

306
00:12:16,260 --> 00:12:18,420
que existen y el número
de documentos en cada

307
00:12:18,420 --> 00:12:20,510
uno de ellos.

308
00:12:20,510 --> 00:12:22,670
Parece que está bien balanceada.

309
00:12:22,670 --> 00:12:23,660
Veamos.

310
00:12:23,660 --> 00:12:23,790
Tamaño--

311
00:12:23,790 --> 00:12:24,624
2.3--

312
00:12:24,624 --> 00:12:29,040
sí, 200 megabytes, creo, en
cada uno de estos servidores.

313
00:12:29,040 --> 00:12:33,240
Y si hago una consulta, digamos

314
00:12:33,240 --> 00:12:34,490
"grades.find({'student_id':1})",

315
00:12:34,490 --> 00:12:42,506

316
00:12:42,506 --> 00:12:44,710
el documento se ve muy similar
a lo que has estado utilizando

317
00:12:44,710 --> 00:12:46,560
desde el comienzo.

318
00:12:46,560 --> 00:12:48,010
¿Te acuerdas de esta estructura?

319
00:12:48,010 --> 00:12:52,950
Y si hago un "explain",
puedes ver que me va a

320
00:12:52,950 --> 00:12:55,890
retornar más información que antes.

321
00:12:55,890 --> 00:12:59,820
En particular, voy a ver que
para hacer esta consulta en

322
00:12:59,820 --> 00:13:04,770
particular, buscó en el "shard"
"s1" en ordenamiento paralelo.

323
00:13:04,770 --> 00:13:08,480
Y no creo que buscó en el "shard"
"s0", lo cual tiene sentido.

324
00:13:08,480 --> 00:13:11,050
Eso te dice qué tan eficiente
fue la consulta, si es que

325
00:13:11,050 --> 00:13:14,160
tuvo que ir a múltiples
"shards" para responderla

326
00:13:14,160 --> 00:13:15,190
o sólo a uno.

327
00:13:15,190 --> 00:13:18,640
Puedes ver que una vez que
llegó a este "shard", usó

328
00:13:18,640 --> 00:13:20,950
el índice "BtreeCursor"
"student_id" porque acuérdate

329
00:13:20,950 --> 00:13:22,520
que hay un índice
en "student_id".

330
00:13:22,520 --> 00:13:25,800
Tiene que haber un índice en
"student_id" para que pueda hacer

331
00:13:25,800 --> 00:13:27,130
"shard" por "student_id".

332
00:13:27,130 --> 00:13:31,060
Ahora, si hago un consulta
que no incluya criterios,

333
00:13:31,060 --> 00:13:33,220
tendría que ir a
todos los "shards".

334
00:13:33,220 --> 00:13:35,390
Voy a hacer eso.

335
00:13:35,390 --> 00:13:36,620
Está bien.

336
00:13:36,620 --> 00:13:42,110
Aquí puedes ver si fue tanto
al "shard" "s0" como al "s1"

337
00:13:42,110 --> 00:13:45,760
para responder esta consulta
y una vez que entró al "shard",

338
00:13:45,760 --> 00:13:46,720
usó el cursor básico,
porque no había

339
00:13:46,720 --> 00:13:49,960
ningún criterio específico.

340
00:13:49,960 --> 00:13:53,010
Eso te da una idea de cómo
funciona un ambiente con

341
00:13:53,010 --> 00:13:53,860
"sharding".

342
00:13:53,860 --> 00:13:56,600
Espero que crees uno
tú mismo y que puedas

343
00:13:56,600 --> 00:14:00,290
experimentar y comprender
cómo funciona.

344
00:14:00,290 --> 00:14:02,190
Vamos a hablar un
poco más sobre esto.

345
00:14:02,190 --> 00:14:03,910
Ahora hagamos un cuestionario.

346
00:14:03,910 --> 00:14:05,680
Y la pregunta es, si quieres
crear un sistema de producción

347
00:14:05,680 --> 00:14:08,280
con dos "shards", y que cada
uno sea un conjunto de réplicas

348
00:14:08,280 --> 00:14:10,880
con tres nodos, ¿cuántos procesos
mongod debes iniciar?

349
00:14:10,880 --> 00:14:12,130