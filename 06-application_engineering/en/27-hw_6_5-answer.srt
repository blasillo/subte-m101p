1
00:00:00,000 --> 00:00:00,170

2
00:00:00,170 --> 00:00:02,910
OK, in this problem, we asked
you to create a replica set

3
00:00:02,910 --> 00:00:04,310
and prove that it works.

4
00:00:04,310 --> 00:00:08,860
Now, the hard part about this is
probably that nothing ever

5
00:00:08,860 --> 00:00:11,710
works quite as you hope on a
computer and that lots of

6
00:00:11,710 --> 00:00:13,770
small things come up, and you
have to work through them.

7
00:00:13,770 --> 00:00:15,530
In addition, if you're a Windows
user, I didn't even

8
00:00:15,530 --> 00:00:17,660
give you Windows instructions,
so that's an additional level

9
00:00:17,660 --> 00:00:19,375
of complexity.

10
00:00:19,375 --> 00:00:21,970
I suggested that you create
three directories right here

11
00:00:21,970 --> 00:00:23,280
and that's slash data.

12
00:00:23,280 --> 00:00:26,160
And then, that you run these
commands right here to name a

13
00:00:26,160 --> 00:00:28,600
replica set and define your
logpath as being in your

14
00:00:28,600 --> 00:00:31,180
current directory, use small
files, because you don't want

15
00:00:31,180 --> 00:00:34,910
to use the disk space and,
finally, to use these

16
00:00:34,910 --> 00:00:36,875
different data directories
that we created.

17
00:00:36,875 --> 00:00:39,240
Then, you're supposed to connect
to Mongo and, then,

18
00:00:39,240 --> 00:00:42,430
install this configuration
on the server and,

19
00:00:42,430 --> 00:00:43,165
then, initiate it.

20
00:00:43,165 --> 00:00:44,640
And that's really it.

21
00:00:44,640 --> 00:00:46,860
And then, run this validation
script to prove you did it.

22
00:00:46,860 --> 00:00:48,850
So I'm going to show you
it running on my

23
00:00:48,850 --> 00:00:51,140
computer and how it works.

24
00:00:51,140 --> 00:00:52,160
I have two scripts actually.

25
00:00:52,160 --> 00:00:55,590
The first one is called
create_replica_set.sh.

26
00:00:55,590 --> 00:00:58,810
And what that does is it first
removes all the directories.

27
00:00:58,810 --> 00:01:01,450
So this is probably
not something for

28
00:01:01,450 --> 00:01:02,230
the faint of heart.

29
00:01:02,230 --> 00:01:03,480
But I know that these
are basically

30
00:01:03,480 --> 00:01:04,700
empty, so I don't care.

31
00:01:04,700 --> 00:01:07,610
And then, I create the
directories again.

32
00:01:07,610 --> 00:01:09,055
And then, I run the
three Mongos.

33
00:01:09,055 --> 00:01:10,875
Let's first do that.

34
00:01:10,875 --> 00:01:15,220
So let's go here and I'm going
to start with killall mongod.

35
00:01:15,220 --> 00:01:17,770
I think that's done, but, yeah,
it was already done.

36
00:01:17,770 --> 00:01:22,905
And then, I'm going to call
create_replica_set.sh.

37
00:01:22,905 --> 00:01:24,560
And you can see it runs.

38
00:01:24,560 --> 00:01:26,870
And then, if I look at
one of the logs,

39
00:01:26,870 --> 00:01:27,800
it seems to be running.

40
00:01:27,800 --> 00:01:29,320
So that's good.

41
00:01:29,320 --> 00:01:33,410
ps -ef grep [? for ?] mongod,
and I've got three of them. so

42
00:01:33,410 --> 00:01:34,710
I'm feeling good about that.

43
00:01:34,710 --> 00:01:39,440
And then, I wrote a secondary
script called init_replSet.

44
00:01:39,440 --> 00:01:43,490
And that just has the command
that I told you to type in at

45
00:01:43,490 --> 00:01:44,460
the prompt.

46
00:01:44,460 --> 00:01:46,210
I was doing it over and over
again, so it was easier to put

47
00:01:46,210 --> 00:01:47,445
it into a script.

48
00:01:47,445 --> 00:01:49,835
And so that's the configuration
and

49
00:01:49,835 --> 00:01:51,015
the initiate step.

50
00:01:51,015 --> 00:01:55,570
So I'm going to call that mongo
initiate replica.js.

51
00:01:55,570 --> 00:01:57,540
And there we go.

52
00:01:57,540 --> 00:01:58,210
It should be good.

53
00:01:58,210 --> 00:02:01,815
I'll make sure it's
OK, rs.status.

54
00:02:01,815 --> 00:02:03,010
Looks good to me.

55
00:02:03,010 --> 00:02:04,300
Actually, it's not
totally done yet.

56
00:02:04,300 --> 00:02:07,880
It's in secondary startup
unknown, Let's see.

57
00:02:07,880 --> 00:02:08,994
So I'll run it again.

58
00:02:08,994 --> 00:02:10,874
They're not quite done yet.

59
00:02:10,874 --> 00:02:13,030
So let's see if I just
keep running this.

60
00:02:13,030 --> 00:02:17,150
Recovering and, oh, now, I'm
up at the secondary.

61
00:02:17,150 --> 00:02:19,040
So now, it looks
like it's good.

62
00:02:19,040 --> 00:02:21,500
Great, primary, secondary,
secondary.

63
00:02:21,500 --> 00:02:23,510
And then, I'm going to quit
out of this and run the

64
00:02:23,510 --> 00:02:26,540
validation script, python
validate.py.

65
00:02:26,540 --> 00:02:29,740
And it connects locally
to the replica set

66
00:02:29,740 --> 00:02:31,380
and says that I passed.

67
00:02:31,380 --> 00:02:34,250
It connects to the RSS status
and a few other things.

68
00:02:34,250 --> 00:02:37,300
So it gives me my validation
code, which is congrats, you

69
00:02:37,300 --> 00:02:39,060
rock, 2012.

70
00:02:39,060 --> 00:02:42,410
And by the way, you all rock
if you got all this done.

71
00:02:42,410 --> 00:02:45,060
I think it's been a pretty
intense course if you've never

72
00:02:45,060 --> 00:02:47,210
done MongoDB before and,
certainly, if you don't have

73
00:02:47,210 --> 00:02:48,770
any Python of experience,
as well.

74
00:02:48,770 --> 00:02:50,880
I know for a lot of people,
you're probably experienced.

75
00:02:50,880 --> 00:02:52,880
Some people on the
forums seem more

76
00:02:52,880 --> 00:02:54,820
experienced than me in MongoDB.

77
00:02:54,820 --> 00:02:57,490
So for those people maybe it was
an easy course, but I know

78
00:02:57,490 --> 00:02:58,490
for a lot of you, it was
probably challenging.

79
00:02:58,490 --> 00:03:01,680
So congratulations on getting
to this point.

80
00:03:01,680 --> 00:03:04,680
OK, so that's how this
particular problem works.

81
00:03:04,680 --> 00:03:05,930