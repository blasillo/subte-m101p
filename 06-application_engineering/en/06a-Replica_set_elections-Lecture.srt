1
00:00:00,000 --> 00:00:00,190

2
00:00:00,190 --> 00:00:03,320
OK, let's talk about the
election that goes on when the

3
00:00:03,320 --> 00:00:06,290
primary fails, and the different
types of nodes that

4
00:00:06,290 --> 00:00:08,360
can exist in a replica set.

5
00:00:08,360 --> 00:00:12,970
So first there is the regular
type of node, and that node,

6
00:00:12,970 --> 00:00:16,690
which is the one I showed in the
earlier lesson is a node

7
00:00:16,690 --> 00:00:19,820
that has the data, and
can become primary.

8
00:00:19,820 --> 00:00:22,370
And it's the most normal
type of node.

9
00:00:22,370 --> 00:00:25,170
It can be a primary
or a secondary.

10
00:00:25,170 --> 00:00:28,360
Now, the next type of node
is an arbiter node.

11
00:00:28,360 --> 00:00:32,930
An arbiter node is just there
for voting purposes, and

12
00:00:32,930 --> 00:00:34,100
there's lots of reasons
why you might want

13
00:00:34,100 --> 00:00:35,480
to use one of these.

14
00:00:35,480 --> 00:00:38,690
For example, if you want to have
an even number of replica

15
00:00:38,690 --> 00:00:42,740
set nodes, then you need to
make sure that there's an

16
00:00:42,740 --> 00:00:46,300
arbiter node out there, so that
when one goes down, you

17
00:00:46,300 --> 00:00:49,220
still have a majority,
a strict majority

18
00:00:49,220 --> 00:00:50,740
to vote a new leader.

19
00:00:50,740 --> 00:00:53,320
So that's one reason why you
might want to use an arbiter.

20
00:00:53,320 --> 00:00:55,740
Or if you just want to put
together a replica set, let's

21
00:00:55,740 --> 00:00:59,300
say with three nodes, but only
two of them are real nodes,

22
00:00:59,300 --> 00:01:01,590
and one of them is an arbiter
because you only have two

23
00:01:01,590 --> 00:01:04,330
machines, you can
do that as well.

24
00:01:04,330 --> 00:01:06,690
And an arbiter, of course,
will participate in the

25
00:01:06,690 --> 00:01:09,260
voting, as will a
regular node.

26
00:01:09,260 --> 00:01:12,270
Another type of node
is a delayed node.

27
00:01:12,270 --> 00:01:14,250
That's often a disaster
recovery node.

28
00:01:14,250 --> 00:01:16,920
It can be set to be, let's
say, an hour, two hours,

29
00:01:16,920 --> 00:01:19,720
whatever you want behind
the other nodes.

30
00:01:19,720 --> 00:01:23,240
And it can participate in the
voting, so that's yes of the

31
00:01:23,240 --> 00:01:28,280
voting, but it cannot become
a primary node.

32
00:01:28,280 --> 00:01:31,360
And to achieve this, its
priority is set to zero.

33
00:01:31,360 --> 00:01:33,360
And you can set the priority
of any node to zero if you

34
00:01:33,360 --> 00:01:36,980
want, and it cannot be elected
to be a primary node.

35
00:01:36,980 --> 00:01:39,850
And then the final type of node
is a hidden node, and a

36
00:01:39,850 --> 00:01:43,340
hidden node is a node that is
often used for analytics.

37
00:01:43,340 --> 00:01:45,580
It cannot become the primary
node, so it's not going to be

38
00:01:45,580 --> 00:01:46,370
the primary.

39
00:01:46,370 --> 00:01:47,630
Never the primary.

40
00:01:47,630 --> 00:01:51,230
But it also has the
characteristic that its

41
00:01:51,230 --> 00:01:53,890
priority is set to zero.

42
00:01:53,890 --> 00:01:56,890
And so therefore it cannot
become the primary.

43
00:01:56,890 --> 00:02:00,760
So the other concept is one of
votes, that you can decide how

44
00:02:00,760 --> 00:02:02,600
many votes each of
these nodes has.

45
00:02:02,600 --> 00:02:06,800
We'll assume that every node
has one vote, because in

46
00:02:06,800 --> 00:02:10,180
reality, it's not too convenient
or typical to give

47
00:02:10,180 --> 00:02:12,060
more than one vote to a node.

48
00:02:12,060 --> 00:02:13,770
So you have these different
types of nodes.

49
00:02:13,770 --> 00:02:16,600
A regular node, an arbiter node
that has no data on it.

50
00:02:16,600 --> 00:02:19,880
A delayed regular node that
cannot become the primary, but

51
00:02:19,880 --> 00:02:21,630
can participate in elections.

52
00:02:21,630 --> 00:02:23,770
And you have a hidden node that
can also not become the

53
00:02:23,770 --> 00:02:27,500
primary, and can participate
in elections.

54
00:02:27,500 --> 00:02:29,280
So we'll check that
off there, too.

55
00:02:29,280 --> 00:02:32,440
So as I said, when failover
occurs because for some reason

56
00:02:32,440 --> 00:02:34,990
the primary is not reachable,
then the remaining nodes will

57
00:02:34,990 --> 00:02:38,370
elect a new primary, and then
that node will become primary.

58
00:02:38,370 --> 00:02:40,860
And then the drivers
will reconnect.

59
00:02:40,860 --> 00:02:43,820
And it's pretty transparent
to the application.

60
00:02:43,820 --> 00:02:46,430
We'll go into that, what you
see when that happens.

61
00:02:46,430 --> 00:02:49,050
And then you'll continue
on your way.

62
00:02:49,050 --> 00:02:51,260
All right, so let's
do a short quiz.

63
00:02:51,260 --> 00:02:54,410
So thinking about these
different types of nodes,

64
00:02:54,410 --> 00:02:56,970
which of them can participate in
elections of a new primary

65
00:02:56,970 --> 00:02:58,620
if there's failover?

66
00:02:58,620 --> 00:03:00,790
Regular replica set members,
hidden members,

67
00:03:00,790 --> 00:03:02,130
arbiters, and lawyers.

68
00:03:02,130 --> 00:03:03,380
So check all that apply.