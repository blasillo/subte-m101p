1
00:00:00,000 --> 00:00:00,500


2
00:00:00,500 --> 00:00:03,090
Bien, ya hemos hablado un
poco sobre que MongoDB

3
00:00:03,090 --> 00:00:04,200
es sin esquema.

4
00:00:04,200 --> 00:00:07,520
Y quiero volver a ese tema
y enseñarte un poco más

5
00:00:07,520 --> 00:00:09,770
desde el shell mongo qué
significa eso, ahora

6
00:00:09,770 --> 00:00:11,899
que ya has visto la instalación
de MongoDB,

7
00:00:11,899 --> 00:00:13,440
has visto el shell
y cómo construir

8
00:00:13,440 --> 00:00:16,570
una pequeña aplicación
de principio a fin.

9
00:00:16,570 --> 00:00:19,500
Así que fundamentalmente se trata
de unas cuantas cosas diferentes.

10
00:00:19,500 --> 00:00:23,020
La primera es que a menudo en
un sistema relacional

11
00:00:23,020 --> 00:00:26,400
tendrás una tabla y ciertas
columnas en esa tabla.

12
00:00:26,400 --> 00:00:30,700
Por ejemplo, "nombre", "edad" y
quizá "ciudad de nacimiento",

13
00:00:30,700 --> 00:00:31,460
o algo así.

14
00:00:31,460 --> 00:00:33,050
Y con el tiempo, podrías
decidir que quieres

15
00:00:33,050 --> 00:00:35,133
mantener un poco de
información adicional.

16
00:00:35,133 --> 00:00:37,370
Para hacer eso, tendrías
que expandir la tabla

17
00:00:37,370 --> 00:00:38,882
y ejecutar un comando "alter table".

18
00:00:38,882 --> 00:00:40,840
Así es como funciona
en el mundo relacional.

19
00:00:40,840 --> 00:00:42,730
En Mongo, no
necesitas hacer eso.

20
00:00:42,730 --> 00:00:45,320
En Mongo, documentos diferentes
puedes tener esquemas diferentes.

21
00:00:45,320 --> 00:00:47,890
Y esto significa que a medida
que el sistema evoluciona,

22
00:00:47,890 --> 00:00:49,950
con metodologías ágiles
a menudo trabajas

23
00:00:49,950 --> 00:00:51,700
en sprints cortos de
dos o tres semanas,

24
00:00:51,700 --> 00:00:54,270
haces cambios e
iteras el sistema,

25
00:00:54,270 --> 00:00:55,757
podemos adaptarnos a eso.

26
00:00:55,757 --> 00:00:57,590
Así que echemos un vistazo
a qué significa eso

27
00:00:57,590 --> 00:00:58,616
prácticamente en el shell.

28
00:00:58,616 --> 00:01:02,130
Bien, creemos una colección
nueva y llamémosla "users",

29
00:01:02,130 --> 00:01:03,900
y pongamos algo en ella.

30
00:01:03,900 --> 00:01:06,080
Voy a poner "name",
mi propio nombre.

31
00:01:06,080 --> 00:01:09,920
Luego, digamos que quiero
poner mi ciudad de nacimiento,

32
00:01:09,920 --> 00:01:11,530
diremos que es Queens.

33
00:01:11,530 --> 00:01:12,980
Y puedo hacerlo.

34
00:01:12,980 --> 00:01:14,710
Ahora, si examinamos la
colección "users",

35
00:01:14,710 --> 00:01:16,200
veré mi documento.

36
00:01:16,200 --> 00:01:16,890
Aquí está.

37
00:01:16,890 --> 00:01:19,140
Existe un comando "pretty"
en el shell.

38
00:01:19,140 --> 00:01:19,990
Es muy útil.

39
00:01:19,990 --> 00:01:21,910
Imprime las cosas de forma
un poco más clara.

40
00:01:21,910 --> 00:01:23,749
Aquí está, impreso elegantemente.

41
00:01:23,749 --> 00:01:26,290
Pero ahora, supongamos que quiero
añadir otro usuario al sistema.

42
00:01:26,290 --> 00:01:27,950
Y por la razón que
sea, ahora voy a

43
00:01:27,950 --> 00:01:30,010
almacenar información adicional.

44
00:01:30,010 --> 00:01:32,100
Por ejemplo, quiero guardar
un nuevo usuario cuyo

45
00:01:32,100 --> 00:01:34,772
nombre es Richard Kreuter,
el otro instructor.

46
00:01:34,772 --> 00:01:36,980
He decidido que también quiero
almacenar su ciudad de nacimiento,

47
00:01:36,980 --> 00:01:38,620
que no estoy
seguro cuál es,

48
00:01:38,620 --> 00:01:39,837
simplemente me la voy a inventar.

49
00:01:39,837 --> 00:01:41,920
Pero también quiero guardar
su color favorito, creo

50
00:01:41,920 --> 00:01:44,300
que es el rojo,
basándome en nada.

51
00:01:44,300 --> 00:01:45,370
Simplemente una suposición.

52
00:01:45,370 --> 00:01:47,620
Ahora, si examinamos
esa colección,

53
00:01:47,620 --> 00:01:50,194
puedo ver que tengo
dos documentos distintos.

54
00:01:50,194 --> 00:01:52,110
Y de estos dos documentos
diferentes, uno de ellos

55
00:01:52,110 --> 00:01:54,630
sólo tiene un nombre y una ciudad
de nacimmiento y, por supuesto,

56
00:01:54,630 --> 00:01:57,060
este interesante "ObjectId"
del que hablaremos más tarde.

57
00:01:57,060 --> 00:02:01,040
Y el otro documento tiene nombre,
ciudad de nacimiento y color favorito.

58
00:02:01,040 --> 00:02:03,550
Esto permite que Mongo
sea muy ágil,

59
00:02:03,550 --> 00:02:06,150
porque no necesitas tener
exactamente las mismas claves en

60
00:02:06,150 --> 00:02:07,250
cada documento.

61
00:02:07,250 --> 00:02:09,389
Y también podría evolucionar
esto con el tiempo.

62
00:02:09,389 --> 00:02:11,880
Puedo cambiar el esquema
de un documento existente.

63
00:02:11,880 --> 00:02:15,380
Por ejemplo, puedo hacer "db.users.
findOne({name: 'Andrew Erlichson'})"

64
00:02:15,380 --> 00:02:16,900
y guardarlo en una variable.

65
00:02:16,900 --> 00:02:20,370
Estoy buscando el objeto cuyo
nombre es Andrew Erlichson.

66
00:02:20,370 --> 00:02:22,420
Puedo ver el
objeto, ahí está.

67
00:02:22,420 --> 00:02:24,110
Le añado mi color favorito.

68
00:02:24,110 --> 00:02:27,640
Y podría hacer
"db.users.save(j)".

69
00:02:27,640 --> 00:02:30,000
Si ahora examino
esta colección,

70
00:02:30,000 --> 00:02:32,560
puedes ver que
mi objeto ha sido

71
00:02:32,560 --> 00:02:35,411
ahora actualizado para incluir
un color favorito.

72
00:02:35,411 --> 00:02:36,910
A medida que construyamos
sistemas con MongoDB

73
00:02:36,910 --> 00:02:41,270
nos vamos a aprovechar un
montón de esta flexibilidad.
