1
00:00:00,000 --> 00:00:00,210

2
00:00:00,210 --> 00:00:03,290
A veces tienes más de un
array en un documento.

3
00:00:03,290 --> 00:00:06,850
En ese caso, podrías necesitar
hacer un doble unwind,

4
00:00:06,850 --> 00:00:11,270
creando así un producto
cartesiano de ambos

5
00:00:11,270 --> 00:00:14,820
arrays, así como del
resto del documento.

6
00:00:14,820 --> 00:00:16,840
Te doy un ejemplo.

7
00:00:16,840 --> 00:00:20,300
He creado un pequeño
inventario de "e-commerce"

8
00:00:20,300 --> 00:00:23,820
en el cual tengo estos objetos,
como esta camiseta que

9
00:00:23,820 --> 00:00:27,460
viene en diferentes
tamaños y colores.

10
00:00:27,460 --> 00:00:30,660
Y aquí hay unos pantalones
en diferentes tamaños y colores.

11
00:00:30,660 --> 00:00:35,470
Entonces, ¿qué hacemos si queremos
averiguar el número de objetos que

12
00:00:35,470 --> 00:00:39,140
están disponibles dado un
tamaño y un color, sin importar

13
00:00:39,140 --> 00:00:41,190
el nombre del producto?

14
00:00:41,190 --> 00:00:44,420
¿Cómo haríamos eso usando
el Aggregation Framework?

15
00:00:44,420 --> 00:00:45,740
Te lo mostraré.

16
00:00:45,740 --> 00:00:48,350
Ignora la parte superior
de este archivo.

17
00:00:48,350 --> 00:00:51,890
Este programa JavaScript
primero crea la colección

18
00:00:51,890 --> 00:00:54,500
y aquí es donde comienza
lo interesante.

19
00:00:54,500 --> 00:00:57,820
Ejecutamos "db.inventory.aggregate".

20
00:00:57,820 --> 00:01:00,110
Vamos a hacer "$unwind" por tamaño

21
00:01:00,110 --> 00:01:03,820
y justo después de hacer
"$unwind" por tamaño vamos

22
00:01:03,820 --> 00:01:08,230
a crear un nuevo conjunto de documentos
donde cada tamaño empareja con el

23
00:01:08,230 --> 00:01:09,630
resto del documento.

24
00:01:09,630 --> 00:01:12,090
Y cada tamaño tendrá
un array de colores.

25
00:01:12,090 --> 00:01:14,090
Luego vamos a hacer
"$unwind" por colores.

26
00:01:14,090 --> 00:01:18,150
En este punto tenemos
una lista de nombres

27
00:01:18,150 --> 00:01:20,490
y tamaños y colores.

28
00:01:20,490 --> 00:01:25,380
Puede ser un "polo shirt",
"small", "navy" o "polo shirt",

29
00:01:25,380 --> 00:01:27,010
"small", "white".

30
00:01:27,010 --> 00:01:29,280
Eso es lo que vamos a tener
al final de la segunda fase

31
00:01:29,280 --> 00:01:30,700
de "$unwind".

32
00:01:30,700 --> 00:01:32,470
Si queremos agruparlo,
lo hacemos así.

33
00:01:32,470 --> 00:01:36,120
Hacemos una agrupación,
donde "_id" es el tamaño,

34
00:01:36,120 --> 00:01:39,650
"$sizes" y color, "$colors".

35
00:01:39,650 --> 00:01:41,750
Que no te confunda el hecho
que estén en plural.

36
00:01:41,750 --> 00:01:45,070
Al finalizar el "$unwind",
esto es, en un sentido, singular

37
00:01:45,070 --> 00:01:46,460
porque para éstos, va a crear

38
00:01:46,460 --> 00:01:48,390
un elemento en cada documento

39
00:01:48,390 --> 00:01:52,500
y luego puedo contarlos usando
"$sum" y agregándole uno.

40
00:01:52,500 --> 00:01:55,040
¿Y si hago eso, qué obtengo?

41
00:01:55,040 --> 00:01:57,350
Obtengo lo que esperarías.

42
00:01:57,350 --> 00:02:01,410
En el campo "_id" de cada uno
de estos documentos, veo que

43
00:02:01,410 --> 00:02:03,300
hay un tamaño y un color.

44
00:02:03,300 --> 00:02:05,960
Voy a contar el número
de veces que aparecen.

45
00:02:05,960 --> 00:02:08,910
Para "size" "small", "color"
"red" hay dos elementos.

46
00:02:08,910 --> 00:02:12,920
Para "size" "32 by 32"--éstas
son pulgadas para pantalones

47
00:02:12,920 --> 00:02:14,090
en los Estados Unidos--

48
00:02:14,090 --> 00:02:16,400
"color" "white", hay un elemento.

49
00:02:16,400 --> 00:02:17,150
Bien.

50
00:02:17,150 --> 00:02:19,640
Así se hace un "$unwind" doble
si es que hay más de un

51
00:02:19,640 --> 00:02:23,090
array y quieres expandir
ambos arrays para hacer

52
00:02:23,090 --> 00:02:25,510
operaciones de agregación
sobre los elementos.

53
00:02:25,510 --> 00:02:27,210
Hagamos un cuestionario.

54
00:02:27,210 --> 00:02:31,450
¿Puedes revertir los efectos
de un "$unwind" doble, es decir

55
00:02:31,450 --> 00:02:32,605
de los dos "$unwind" que te mostré?

56
00:02:32,605 --> 00:02:35,660
¿Puedes revertir los efectos de
un "$unwind" doble en nuestra

57
00:02:35,660 --> 00:02:37,820
colección de inventario

58
00:02:37,820 --> 00:02:39,430
con el operador "$push"?

59
00:02:39,430 --> 00:02:43,340
Hablamos sobre como el operador
"$push" puede revertir los

60
00:02:43,340 --> 00:02:45,040
efectos de un "$unwind".

61
00:02:45,040 --> 00:02:49,310
¿Puedes revertir dos "$unwind"
utilizando el operador "$push"?

62
00:02:49,310 --> 00:02:50,560
Piensa sobre eso.

63
00:02:50,560 --> 00:02:51,540