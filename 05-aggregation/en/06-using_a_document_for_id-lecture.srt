1
00:00:00,000 --> 00:00:00,370

2
00:00:00,370 --> 00:00:02,940
I realized as I was doing the
last lesson that we had never

3
00:00:02,940 --> 00:00:07,920
really shown that the _id key of
a document can itself be a

4
00:00:07,920 --> 00:00:09,490
complex document.

5
00:00:09,490 --> 00:00:10,600
And it can be.

6
00:00:10,600 --> 00:00:12,050
It just needs to be unique.

7
00:00:12,050 --> 00:00:14,190
So I just wanted to quickly
make that clear.

8
00:00:14,190 --> 00:00:16,550
So here I have a little
collection called foo.

9
00:00:16,550 --> 00:00:19,670
And I'm just inserting something
with an _id being a

10
00:00:19,670 --> 00:00:25,080
document of name andrew, class
m101, and hometown New York.

11
00:00:25,080 --> 00:00:29,610
If I do that and I look at the
collection, you can see that I

12
00:00:29,610 --> 00:00:32,549
have an _id of a
document here.

13
00:00:32,549 --> 00:00:35,020
And so this is not something
that's unique to aggregation.

14
00:00:35,020 --> 00:00:37,610
This is something that's
generally true about mongodb,

15
00:00:37,610 --> 00:00:40,585
which is that your _id field
can be a document.

16
00:00:40,585 --> 00:00:42,610
It doesn't need to be
a scalar value.

17
00:00:42,610 --> 00:00:44,700
I think we've always shown it as
a scalar value, and that's

18
00:00:44,700 --> 00:00:46,290
certainly most typical.

19
00:00:46,290 --> 00:00:48,410
But in aggregation, it actually
isn't typical.

20
00:00:48,410 --> 00:00:50,940
And I don't want you to think
that that's unusual or that's

21
00:00:50,940 --> 00:00:53,820
a special case for mongodb
because it's not.

22
00:00:53,820 --> 00:00:57,550
And the only real requirement
for _id is that it be unique

23
00:00:57,550 --> 00:01:00,820
because it is a unique primary
key for the collection.

24
00:01:00,820 --> 00:01:03,790
So if I try to assert that
document again with the exact

25
00:01:03,790 --> 00:01:08,410
same document as its _id field
as its value, I'll find that

26
00:01:08,410 --> 00:01:09,140
it won't go in.

27
00:01:09,140 --> 00:01:10,880
And you can see that I get
a duplicate key error.

28
00:01:10,880 --> 00:01:12,130