1
00:00:00,000 --> 00:00:00,100

2
00:00:00,100 --> 00:00:03,420
All right this segment is
provided for all the Windows

3
00:00:03,420 --> 00:00:06,930
users out there who want a
little bit of help installing

4
00:00:06,930 --> 00:00:08,670
PyMongo on Windows.

5
00:00:08,670 --> 00:00:11,540
If you are a Mac user,
you don't need

6
00:00:11,540 --> 00:00:13,170
to watch this segment.

7
00:00:13,170 --> 00:00:15,550
It is for Windows users.

8
00:00:15,550 --> 00:00:18,480
So let's see how this works.

9
00:00:18,480 --> 00:00:20,730
I have a Windows VM here,
running on my Mac.

10
00:00:20,730 --> 00:00:22,810
So it doesn't really matter
that it's virtualized.

11
00:00:22,810 --> 00:00:24,190
But the window looks
a little weird.

12
00:00:24,190 --> 00:00:25,740
That's what's going on.

13
00:00:25,740 --> 00:00:30,600
So I'm starting out by going
to api.mongodb.org.

14
00:00:30,600 --> 00:00:33,200
And that has a whole list of
different languages that we

15
00:00:33,200 --> 00:00:35,050
support and the drivers.

16
00:00:35,050 --> 00:00:39,030
And we're going to go into the
Python driver right here, into

17
00:00:39,030 --> 00:00:41,950
the current one, which
is Python 2.5.

18
00:00:41,950 --> 00:00:44,030
The screen's a little
bit small here.

19
00:00:44,030 --> 00:00:45,940
Hopefully you'll be
able to see it.

20
00:00:45,940 --> 00:00:47,200
We're going to go to
the installing

21
00:00:47,200 --> 00:00:48,980
and upgrading section.

22
00:00:48,980 --> 00:00:51,930
And you can see here that they
recommend that when using MS

23
00:00:51,930 --> 00:00:54,990
Windows that you use
one of the Python

24
00:00:54,990 --> 00:00:56,550
packaged installers here.

25
00:00:56,550 --> 00:00:59,610
So we're just going to
go here to that.

26
00:00:59,610 --> 00:01:02,130
And go to the bottom.

27
00:01:02,130 --> 00:01:04,530
And see what's there.

28
00:01:04,530 --> 00:01:07,470
And find the right one.

29
00:01:07,470 --> 00:01:08,900
So let's see.

30
00:01:08,900 --> 00:01:12,350
We are running PyMongo 2.5
when this was recorded.

31
00:01:12,350 --> 00:01:16,450
And we want to find
the Win32 binary.

32
00:01:16,450 --> 00:01:22,080
And we want to find the one for
Python 2.7, which is what

33
00:01:22,080 --> 00:01:23,200
we've installed here.

34
00:01:23,200 --> 00:01:24,600
It looks like this is it.

35
00:01:24,600 --> 00:01:28,340
So I'm going to just click
on that and download it.

36
00:01:28,340 --> 00:01:30,650
And then I'm going to run it.

37
00:01:30,650 --> 00:01:34,850
It's going to bring
up this installer.

38
00:01:34,850 --> 00:01:37,760
And looks like it finished.

39
00:01:37,760 --> 00:01:41,480
So to test it, I have
a small program.

40
00:01:41,480 --> 00:01:43,340
The program looks like this.

41
00:01:43,340 --> 00:01:46,230
Again, a little bit small, but
I'll go through the details.

42
00:01:46,230 --> 00:01:47,170
It's a very simple program.

43
00:01:47,170 --> 00:01:51,160
It just picks up to a single
value from a collection.

44
00:01:51,160 --> 00:01:52,510
Import PyMongo.

45
00:01:52,510 --> 00:01:56,650
Then from PyMongo, Import Mongo
Client, right here.

46
00:01:56,650 --> 00:01:59,710
And then we're going to connect
to the database, using

47
00:01:59,710 --> 00:02:03,590
the Mongo Client class, and
then specifying that we're

48
00:02:03,590 --> 00:02:06,110
connecting to local host,
and under the

49
00:02:06,110 --> 00:02:08,910
default port of 27017.

50
00:02:08,910 --> 00:02:12,070
We connect to the test
database, db equals

51
00:02:12,070 --> 00:02:13,560
connection dot test.

52
00:02:13,560 --> 00:02:17,060
And to the Names collection,
names equals db dots names.

53
00:02:17,060 --> 00:02:22,800
And then we call Find One and
pass the return value to the

54
00:02:22,800 --> 00:02:24,030
item variable.

55
00:02:24,030 --> 00:02:26,170
Then we just print
that value out.

56
00:02:26,170 --> 00:02:29,020
So let's see what happens
when we try that.

57
00:02:29,020 --> 00:02:31,260
Python's been previously
installed.

58
00:02:31,260 --> 00:02:36,320
So I call Python,
pymongo_getting_starged.py,

59
00:02:36,320 --> 00:02:39,990
which is the program I just
showed you in Emacs.

60
00:02:39,990 --> 00:02:41,810
And then we'll run that.

61
00:02:41,810 --> 00:02:44,790
And when we do that, you
can see right here.

62
00:02:44,790 --> 00:02:49,210
It says Andrew, which is what
is in the collection.

63
00:02:49,210 --> 00:02:53,930
If we go in here, we call
Mongo and db.names.find.

64
00:02:53,930 --> 00:02:56,830

65
00:02:56,830 --> 00:02:57,990
There it is.

66
00:02:57,990 --> 00:03:00,830
So there's the document.

67
00:03:00,830 --> 00:03:04,950
And you can see right here it's
underscore id, which was

68
00:03:04,950 --> 00:03:08,300
assigned when it was inserted
and then the name Andrew.

69
00:03:08,300 --> 00:03:12,200
And the program printed out my
name right there when I ran

70
00:03:12,200 --> 00:03:12,980
the program.

71
00:03:12,980 --> 00:03:15,280
So now how PyMongo
is installed on

72
00:03:15,280 --> 00:03:16,570
this Windows machine.

73
00:03:16,570 --> 00:03:19,480
And you can do it the same
way on your computer.

74
00:03:19,480 --> 00:03:20,730