1
00:00:00,000 --> 00:00:00,150

2
00:00:00,150 --> 00:00:02,090
OK. Ahora que sabemos cómo
poner documentos en la

3
00:00:02,090 --> 00:00:04,630
base de datos, hay que aprender
cómo accederlos de una manera 

4
00:00:04,630 --> 00:00:05,990
más avanzada.

5
00:00:05,990 --> 00:00:08,180
La operación más básica para
recuperar documentos de la

6
00:00:08,180 --> 00:00:09,920
base de datos se llama "find".

7
00:00:09,920 --> 00:00:13,110
Aun así, muchas veces es más
simple buscar un solo documento

8
00:00:13,110 --> 00:00:14,020
en la base de datos.

9
00:00:14,020 --> 00:00:16,580
Y para esto, tenemos un método
auxiliar llamado "findOne".

10
00:00:16,580 --> 00:00:19,200
Todas las operaciones CRUD están
sintácticamente presentadas como

11
00:00:19,200 --> 00:00:21,040
métodos de una colección.

12
00:00:21,040 --> 00:00:24,130
El método "findOne", cuando es
llamado sin argumentos, recupera

13
00:00:24,130 --> 00:00:26,820
esencialmente un
documento al azar

14
00:00:26,820 --> 00:00:27,420
de la colección.

15
00:00:27,420 --> 00:00:30,370
Esto puede ser útil al
examinar qué esquemas siguen

16
00:00:30,370 --> 00:00:32,310
los documentos en tu colección.

17
00:00:32,310 --> 00:00:35,720
Entonces aquí tenemos un documento
con un campo llamado "_id", cuyo

18
00:00:35,720 --> 00:00:38,960
valor es un ObjectId; un campo
llamado "Name", cuyo valor es una

19
00:00:38,960 --> 00:00:42,600
cadena; un campo llamado "Age"
cuyo valor es un entero--

20
00:00:42,600 --> 00:00:45,220
o algún tipo de número; y
un campo llamado "Profession",

21
00:00:45,220 --> 00:00:46,980
cuyo valor es otra cadena.

22
00:00:46,980 --> 00:00:48,760
Podemos pasarle argumentos a findOne.

23
00:00:48,760 --> 00:00:51,370
En este caso, voy a presionar la flecha
hacia arriba para recuperar mi comando 

24
00:00:51,370 --> 00:00:53,510
previo y moverme con las flechas.

25
00:00:53,510 --> 00:00:56,790
El primer argumento para findOne
especifica qué criterios estoy 

26
00:00:56,790 --> 00:00:59,865
buscando para considerar un
documento como un resultado.

27
00:00:59,865 --> 00:01:03,680
Es decir, es análogo a la cláusula
WHERE dentro de una sentencia

28
00:01:03,680 --> 00:01:05,400
SELECT en SQL.

29
00:01:05,400 --> 00:01:08,080
El argumento que viene
aquí es un documento.

30
00:01:08,080 --> 00:01:11,050
En este caso, "findOne" me
retornaría un documento

31
00:01:11,050 --> 00:01:13,420
donde el campo "Name"
tiene el valor "Jones".

32
00:01:13,420 --> 00:01:15,450
Y hay un documento con
el nombre "Jones".

33
00:01:15,450 --> 00:01:18,450
Éste es nuestro primer ejemplo
de una consulta a MongoDB que

34
00:01:18,450 --> 00:01:20,570
tiene un tipo de restricción.

35
00:01:20,570 --> 00:01:23,050
Como pueden ver, la
especificación de qué

36
00:01:23,050 --> 00:01:26,870
documentos consideramos resultados válidos
está presentada en sí como un documento.

37
00:01:26,870 --> 00:01:29,710
Esto es una variación considerable a
la manera en que se hacen las cosas en,

38
00:01:29,710 --> 00:01:31,480
digamos, una tradicional
base de datos relacional.

39
00:01:31,480 --> 00:01:33,910
En lugar de tener un lenguaje
de consulta orientado a cadenas,

40
00:01:33,910 --> 00:01:36,770
como el lenguaje de consulta
SQL, nosotros enviamos la

41
00:01:36,770 --> 00:01:40,910
codificación BSON de este argumento
al "findOne" a través de la conexión,

42
00:01:40,910 --> 00:01:43,330
envuelta en algunos encabezados de
mensaje, como una operación, para

43
00:01:43,330 --> 00:01:44,580
que sea ejecutada por
la base de datos.

44
00:01:44,580 --> 00:01:47,850
Es decir, la consulta que
se ejecuta en el servidor es

45
00:01:47,850 --> 00:01:51,270
presentada al servidor en la
forma de un documento estructurado,

46
00:01:51,270 --> 00:01:54,220
en lugar de una secuencia de texto
que tiene que ser diseccionada

47
00:01:54,220 --> 00:01:54,970
y analizada.

48
00:01:54,970 --> 00:01:57,330
Te podrías estar preguntando por qué
te estoy explicando estos detalles.

49
00:01:57,330 --> 00:02:00,000
La razón es que es comúnmente
algo difícil para las personas

50
00:02:00,000 --> 00:02:03,100
el acostumbrarse a la mentalidad del
lenguaje de consulta en un sistema

51
00:02:03,100 --> 00:02:05,500
donde éste se presenta como un
pedazo de datos estructurados

52
00:02:05,500 --> 00:02:06,460
en lugar de una cadena.

53
00:02:06,460 --> 00:02:10,310
En efecto, no hay ningún uso de
consultas de tipo cadena en ninguna

54
00:02:10,310 --> 00:02:13,490
parte dentro de los procesos del
servidor MongoDB en este momento.

55
00:02:13,490 --> 00:02:15,830
Aprenderemos un poco más sobre el
lenguaje de consultas en una

56
00:02:15,830 --> 00:02:17,320
sección posterior.

57
00:02:17,320 --> 00:02:19,250
Pero por ahora, quería contarte
sobre el segundo argumento

58
00:02:19,250 --> 00:02:21,030
que le puedes pasar a "findOne".

59
00:02:21,030 --> 00:02:23,520
Tomando en cuenta que el primer
argumento para "findOne" especifica

60
00:02:23,520 --> 00:02:26,970
lo que quieres ver, es decir,
qué documentos emparejan con un

61
00:02:26,970 --> 00:02:29,650
tipo particular de cláusula
WHERE, el segundo argumento de

62
00:02:29,650 --> 00:02:32,280
"findOne" te permite
estipular qué campos

63
00:02:32,280 --> 00:02:33,720
quieres que te retorne la base de datos.

64
00:02:33,720 --> 00:02:36,640
El segundo argumento de "findOne"
es especificado, igual que el

65
00:02:36,640 --> 00:02:38,070
primero, como un documento.

66
00:02:38,070 --> 00:02:41,150
Pero en este caso, los campos
de este documento dicen qué

67
00:02:41,150 --> 00:02:43,880
campos deben de ser retornados por
esta consulta a la base de datos.

68
00:02:43,880 --> 00:02:47,870
Entonces, por ejemplo, puedo
decir que quiero ver el campo

69
00:02:47,870 --> 00:02:51,740
"Name" especificando, por ejemplo,
"Name", "True".

70
00:02:51,740 --> 00:02:54,040
Y puedo decir, por ejemplo,
que no quiero ver el campo

71
00:02:54,040 --> 00:02:58,390
"_id" especificando "_id", "False".

72
00:02:58,390 --> 00:03:01,530
Cuando ejecuto esto, voy a
recibir cualquier documento en la

73
00:03:01,530 --> 00:03:04,730
colección "People" donde el
campo "Name" es "Jones"

74
00:03:04,730 --> 00:03:08,100
y sólo voy a ver el campo
"Name", no el campo "_id".

75
00:03:08,100 --> 00:03:09,870
Por supuesto, recibo sólo uno de
éstos resultados, porque sólo

76
00:03:09,870 --> 00:03:11,010
he pedido uno.

77
00:03:11,010 --> 00:03:13,840
De esta manera, el segundo
argumento de "findOne" es

78
00:03:13,840 --> 00:03:16,440
análogo a la lista de
columnas de la gramática 

79
00:03:16,440 --> 00:03:18,540
de SELECT en SQL.

80
00:03:18,540 --> 00:03:20,870
Es decir, te ayuda a
especificar qué campos 

81
00:03:20,870 --> 00:03:22,860
quieres que la base de
datos te retorne.

82
00:03:22,860 --> 00:03:27,560
Ahora, como un detalle histórico,
el campo "_id" por defecto

83
00:03:27,560 --> 00:03:31,210
está presente en la respuesta
de "findOne" aunque no lo

84
00:03:31,210 --> 00:03:32,450
pidas.

85
00:03:32,450 --> 00:03:34,290
Esto es una funcionalidad
un poco rudimentaria.

86
00:03:34,290 --> 00:03:36,890
MongoDB fue conceptualmente
diseñado con un número de

87
00:03:36,890 --> 00:03:39,420
metas en mente. Una de ellas era
que actúe como un tipo de

88
00:03:39,420 --> 00:03:40,740
almacén de objetos.

89
00:03:40,740 --> 00:03:43,350
Y en un ambiente de tipo
almacén de objetos, es

90
00:03:43,350 --> 00:03:47,060
extraordinariamente común el querer
saber el identificador único

91
00:03:47,060 --> 00:03:49,150
del objeto que estás recibiendo
de la base de datos.

92
00:03:49,150 --> 00:03:51,430
aun si sólo estás recibiendo
algunos campos selectos

93
00:03:51,430 --> 00:03:52,770
del objeto.

94
00:03:52,770 --> 00:03:56,080
Entonces, dado ese tipo de
diseño, el campo "_id" es

95
00:03:56,080 --> 00:03:57,370
incluido por defecto.

96
00:03:57,370 --> 00:04:00,590
Pero como puedes ver acá arriba,
puedes explícitamente pedir que

97
00:04:00,590 --> 00:04:03,330
no lo recupere de la base de datos
en una llamada a "findOne" al

98
00:04:03,330 --> 00:04:05,660
especificar "_id", "False".

99
00:04:05,660 --> 00:04:08,090
Aprenderemos mucho más sobre el lenguaje 
de consultas mientras avanzamos.

100
00:04:08,090 --> 00:04:10,910
"findOne" fue simplemente un
tipo de introducción.

101
00:04:10,910 --> 00:04:12,450
OK, hagamos un cuestionario.

102
00:04:12,450 --> 00:04:16,300
Usa "findOne" en la colección
"Users" para encontrar un documento

103
00:04:16,300 --> 00:04:19,870
donde la clave "username" es
la cadena "dwight" y recupera

104
00:04:19,870 --> 00:04:21,600
sólo la clave llamada "Email".

105
00:04:21,600 --> 00:04:22,850