1
00:00:00,000 --> 00:00:00,250

2
00:00:00,250 --> 00:00:03,830
All right, the answer is
that it will succeed.

3
00:00:03,830 --> 00:00:06,820
And it will succeed because that
delete call, right here,

4
00:00:06,820 --> 00:00:11,620
will delete the underscore ID
key that the driver added

5
00:00:11,620 --> 00:00:15,530
allowing a second insert to
occur with a new underscore ID

6
00:00:15,530 --> 00:00:17,110
set by the driver.

7
00:00:17,110 --> 00:00:18,975
Now, the other answers are
wrong, but we'll go through

8
00:00:18,975 --> 00:00:20,060
them real fast.

9
00:00:20,060 --> 00:00:22,740
No, because the underscore will
be a duplicate in the

10
00:00:22,740 --> 00:00:23,610
collection.

11
00:00:23,610 --> 00:00:25,740
That would have been rue
but we deleted it.

12
00:00:25,740 --> 00:00:27,990
No, because the delete
call will delete the

13
00:00:27,990 --> 00:00:29,060
entire record in python.

14
00:00:29,060 --> 00:00:30,200
That is not true.

15
00:00:30,200 --> 00:00:31,320
The delete--

16
00:00:31,320 --> 00:00:35,190
the D-E-L function in python
will remove just that key

17
00:00:35,190 --> 00:00:36,530
value pair from that
dictionary.

18
00:00:36,530 --> 00:00:38,170
So that's why that works.

19
00:00:38,170 --> 00:00:41,220
And the final answer gets it
right but explains it wrong.

20
00:00:41,220 --> 00:00:44,160
It says, yes because the pymongo
driver always adds a

21
00:00:44,160 --> 00:00:45,520
unique ID field on insert.

22
00:00:45,520 --> 00:00:46,720
That is not true.

23
00:00:46,720 --> 00:00:50,800
It does not add the unique ID
field, underscore ID field, if

24
00:00:50,800 --> 00:00:54,320
there is already one in the
record that is set to it.

25
00:00:54,320 --> 00:00:55,570