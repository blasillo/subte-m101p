1
00:00:00,000 --> 00:00:00,370

2
00:00:00,370 --> 00:00:02,820
There's one or two more points
I want to make about sorting

3
00:00:02,820 --> 00:00:04,470
within Pymongo.

4
00:00:04,470 --> 00:00:09,720
The first is that the reason why
the syntax varies between

5
00:00:09,720 --> 00:00:13,730
the Mongo shell and Python, the
reason why you need to use

6
00:00:13,730 --> 00:00:18,500
these tuples in this array is
that dictionaries inside

7
00:00:18,500 --> 00:00:20,410
Python are not ordered.

8
00:00:20,410 --> 00:00:24,010
And since the order matters
when sorting, if we simply

9
00:00:24,010 --> 00:00:27,740
give a dictionary of these
items, then when they were

10
00:00:27,740 --> 00:00:31,910
sent over all the way to MongoD
the order wouldn't

11
00:00:31,910 --> 00:00:33,640
necessarily be retained.

12
00:00:33,640 --> 00:00:38,490
Remember that JSON does retain
the order of the key value

13
00:00:38,490 --> 00:00:41,900
pairs, but Python in its
dictionaries does not.

14
00:00:41,900 --> 00:00:45,340
The second thing is that if
you have a single sort

15
00:00:45,340 --> 00:00:49,340
element, this line right here
that's commented out, that

16
00:00:49,340 --> 00:00:51,350
we're only sorting on one key.

17
00:00:51,350 --> 00:00:55,540
You can see there, we simply
give the key and then comma

18
00:00:55,540 --> 00:00:58,790
and Pymongo dot ascending or
Pymongo do descending, all

19
00:00:58,790 --> 00:01:01,240
caps on the ascending or
descending, that's how we

20
00:01:01,240 --> 00:01:04,110
would sort if we had a single
key we wanted to sort on.

21
00:01:04,110 --> 00:01:07,830
But if we want to sort on two
keys, syntax changes a bit.

22
00:01:07,830 --> 00:01:12,420
In that case, we're giving an
array with these tuples that

23
00:01:12,420 --> 00:01:14,960
are then items in the array.

24
00:01:14,960 --> 00:01:19,490
So you can see that it's a
different syntax for using a

25
00:01:19,490 --> 00:01:22,450
single key than it is for
using multiple keys.

26
00:01:22,450 --> 00:01:26,270
And of course if you do want to
use one key, you could also

27
00:01:26,270 --> 00:01:27,160
use this syntax.

28
00:01:27,160 --> 00:01:28,826
You could use an array with
a single tuple and

29
00:01:28,826 --> 00:01:29,940
you would be fine.

30
00:01:29,940 --> 00:01:32,420
Anyway, I just wanted to make
those two points about the way

31
00:01:32,420 --> 00:01:36,000
sorting is implemented inside
Pymongo and how it's different

32
00:01:36,000 --> 00:01:40,440
from the mongo shell and also
why different, and then that

33
00:01:40,440 --> 00:01:43,170
they implement the two different
syntaxes for having

34
00:01:43,170 --> 00:01:45,110
a single key versus
multiple keys.

35
00:01:45,110 --> 00:01:46,360