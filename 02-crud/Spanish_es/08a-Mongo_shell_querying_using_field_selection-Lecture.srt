1
00:00:00,000 --> 00:00:00,110

2
00:00:00,110 --> 00:00:02,180
Hay que aprender más
sobre el método "find".

3
00:00:02,180 --> 00:00:04,180
Al igual que el método
"findOne", el método

4
00:00:04,180 --> 00:00:05,740
"find" puede llevar
un par de argumentos.

5
00:00:05,740 --> 00:00:08,530
El primer argumento especifica
qué documentos retornar

6
00:00:08,530 --> 00:00:11,140
en la consulta, similar a lo que
hace la cláusula WHERE en SQL.

7
00:00:11,140 --> 00:00:13,680
Por ejemplo, puedes recuperar
sólo aquellos documentos donde

8
00:00:13,680 --> 00:00:16,320
el campo "type" es "essay".
Aquí vemos un grupo de ensayos

9
00:00:16,320 --> 00:00:17,280
con su nota.

10
00:00:17,280 --> 00:00:20,370
Alternativamente, puedo seleccionar
sólo aquéllos donde el estudiante

11
00:00:20,370 --> 00:00:21,650
es el "student" número 19.

12
00:00:21,650 --> 00:00:23,950
Y hay tres de éstos, siguiendo
la lógica de la inserción que

13
00:00:23,950 --> 00:00:25,510
hicimos anteriormente.

14
00:00:25,510 --> 00:00:29,330
Si quiero unir múltiples cláusulas,
puedo hacerlo especificando

15
00:00:29,330 --> 00:00:31,650
múltiples pares de campo
y valor en el primer

16
00:00:31,650 --> 00:00:32,680
argumento de "find".

17
00:00:32,680 --> 00:00:34,695
En este caso, estoy recibiendo
el documento donde el identificador

18
00:00:34,695 --> 00:00:36,980
de "student" es "19" y
el "type" es "essay."

19
00:00:36,980 --> 00:00:39,250
En efecto, éste es un
detalle importante.

20
00:00:39,250 --> 00:00:41,460
Cuando múltiples campos son
presentados en el documento que

21
00:00:41,460 --> 00:00:44,610
es pasado como primer argumento a "find"
el significado de esa consulta, para

22
00:00:44,610 --> 00:00:47,950
"find", es que ambos campos
tienen que igualar el

23
00:00:47,950 --> 00:00:49,320
criterio especificado.

24
00:00:49,320 --> 00:00:51,770
En este caso, el "student" debe
ser igual a "19" y el "type"

25
00:00:51,770 --> 00:00:54,740
debe ser igual a la cadena
"essay". Además, "find" puede

26
00:00:54,740 --> 00:00:57,260
tomar un segundo argumento
igual que "findOne".

27
00:00:57,260 --> 00:01:00,090
El segundo argumento de "find"
es también un documento y puede

28
00:01:00,090 --> 00:01:03,850
especificar qué campos deben
ser recuperados de la base de datos.

29
00:01:03,850 --> 00:01:06,080
Sólo esos campos serán
retornados a la 

30
00:01:06,080 --> 00:01:08,120
aplicación cliente, en este
caso, el shell.

31
00:01:08,120 --> 00:01:11,580
Por ejemplo, puedo querer
recuperar sólo el "score".

32
00:01:11,580 --> 00:01:14,780
Una vez más, por defecto el "_id"
será retornado, aun si no lo

33
00:01:14,780 --> 00:01:15,700
he pedido.

34
00:01:15,700 --> 00:01:18,620
Si quisiera que no me retorne
el "_id", puedo pedir que

35
00:01:18,620 --> 00:01:23,050
el "_id" sea excluido
especificando "_id" "false".

36
00:01:23,050 --> 00:01:25,900
En este caso, me retorna
sólo el campo "score" del

37
00:01:25,900 --> 00:01:29,510
documento donde el identificador de
"student" es 19 y el tipo es "essay".

38
00:01:29,510 --> 00:01:32,870
Hay muchas otras cosas que decir
sobre las facultades del primer

39
00:01:32,870 --> 00:01:35,090
argumento del la consulta
usando "find", pero

40
00:01:35,090 --> 00:01:37,690
no mucho más que decir sobre
el segundo argumento

41
00:01:37,690 --> 00:01:40,220
de find, así que no lo vamos
a estar repasando durante

42
00:01:40,220 --> 00:01:41,720
el resto de este curso.

43
00:01:41,720 --> 00:01:42,020
OK.

44
00:01:42,020 --> 00:01:43,190
Hagamos un cuestionario.

45
00:01:43,190 --> 00:01:45,740
Considerando una colección
"scores", similar a la que

46
00:01:45,740 --> 00:01:48,030
acabamos de presentar, ¿cómo podrías
encontrar todos los documentos con

47
00:01:48,030 --> 00:01:51,550
un "score" de "essay" igual a "50"
y recuperar sólo el campo "student"

48
00:01:51,550 --> 00:01:52,800
de esos documentos?

49
00:01:52,800 --> 00:01:54,040