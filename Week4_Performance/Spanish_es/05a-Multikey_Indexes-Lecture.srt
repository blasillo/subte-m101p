1
00:00:00,000 --> 00:00:00,530

2
00:00:00,530 --> 00:00:02,600
Hablemos sobre índices multiclave.

3
00:00:02,600 --> 00:00:05,500
En la unidad anterior hablamos
brevemente sobre los índices

4
00:00:05,500 --> 00:00:07,810
multiclave, pero ahora quiero
entrar en más detalles.

5
00:00:07,810 --> 00:00:10,120
Digamos que tienes un documento
y que ese documento

6
00:00:10,120 --> 00:00:13,610
tiene una clave "tags"
cuyo valor es un array.

7
00:00:13,610 --> 00:00:15,700
Y en este caso,
tenemos un array

8
00:00:15,700 --> 00:00:17,950
con "cycling", "tennis"
y "football".

9
00:00:17,950 --> 00:00:20,487
Si quieres hacer consultas
en esta colección y

10
00:00:20,487 --> 00:00:22,070
quieres que esas
consultas sean rápidas,

11
00:00:22,070 --> 00:00:24,570
vas a querer indexar "tags"

12
00:00:24,570 --> 00:00:26,450
si vas a consultar por "tags".

13
00:00:26,450 --> 00:00:28,920
MongoDB soporta la indexación

14
00:00:28,920 --> 00:00:31,710
de una clave cuyo valor
pueda ser un array y

15
00:00:31,710 --> 00:00:34,450
si el valor es un array,
lo que MongoDB hace es

16
00:00:34,450 --> 00:00:36,700
crear lo que llamamos
un índice multiclave.

17
00:00:36,700 --> 00:00:39,180
En lugar de tener un solo punto
en el índice por documento,

18
00:00:39,180 --> 00:00:40,960
hay múltiples puntos, uno

19
00:00:40,960 --> 00:00:43,520
por cada elemento en el array.

20
00:00:43,520 --> 00:00:44,910
Ahora, MongoDB es dinámico.

21
00:00:44,910 --> 00:00:47,680
Cuando creas el índice,
no sabe qué documentos

22
00:00:47,680 --> 00:00:49,240
van a existir en la colección.

23
00:00:49,240 --> 00:00:51,610
Así que no es un
índice multiclave

24
00:00:51,610 --> 00:00:54,260
hasta que insertas un
documento cuyo valor

25
00:00:54,260 --> 00:00:56,049
es un array y hay

26
00:00:56,049 --> 00:00:57,590
algunas otras restricciones

27
00:00:57,590 --> 00:00:58,900
para los índices multiclave.

28
00:00:58,900 --> 00:01:02,660
Por ejemplo, puedes crear un
índice compuesto en "tags" coma

29
00:01:02,660 --> 00:01:06,890
"color" porque sólo uno
de esos dos es un array

30
00:01:06,890 --> 00:01:08,990
y el otro, en este
caso, es un escalar.

31
00:01:08,990 --> 00:01:12,620
Pero MongoDB no te permitiría
crear un índice compuesto en

32
00:01:12,620 --> 00:01:16,150
"tags" coma "location",
porque entonces tendría

33
00:01:16,150 --> 00:01:19,720
que crear puntos en el índice para
cada combinación de los elementos

34
00:01:19,720 --> 00:01:20,380
en los arrays

35
00:01:20,380 --> 00:01:23,080
y eso se vuelve muy grande,
así que no está permitido.

36
00:01:23,080 --> 00:01:24,214
No puede hacer eso.

37
00:01:24,214 --> 00:01:26,380
Para ver algo más concreto,
hay que entrar al shell

38
00:01:26,380 --> 00:01:29,750
y experimentar un poco, para
ver cómo funciona todo esto.

39
00:01:29,750 --> 00:01:31,600
Lo que voy a hacer ahora es

40
00:01:31,600 --> 00:01:34,550
insertar un documento
pequeño y simple

41
00:01:34,550 --> 00:01:36,400
en una colección,
la colección "foo"

42
00:01:36,400 --> 00:01:39,850
y será un documento simple
con las claves "a" y "b".

43
00:01:39,850 --> 00:01:44,310
Ahora, agreguémosle un índice,
"db.foo.ensureIndex",

44
00:01:44,310 --> 00:01:49,970
y así vamos a agregar un
índice en "a" coma "b".

45
00:01:49,970 --> 00:01:50,770
Agregamos el índice.

46
00:01:50,770 --> 00:01:51,886
No hubo problemas.

47
00:01:51,886 --> 00:01:53,260
Anteriormente había
un solo índice,

48
00:01:53,260 --> 00:01:55,080
el índice en "_id".

49
00:01:55,080 --> 00:01:56,530
Ahora dice que
hay dos índices.

50
00:01:56,530 --> 00:01:59,500
Hagamos ahora una consulta
para encontrar un resultado

51
00:01:59,500 --> 00:02:03,032
y encontrar algo
donde "a" es 1.

52
00:02:03,032 --> 00:02:03,990
Encontró ese documento.

53
00:02:03,990 --> 00:02:06,720
Ahora hagamos un
"explain" y veamos

54
00:02:06,720 --> 00:02:09,490
qué nos dice sobre
el índice que utilizó.

55
00:02:09,490 --> 00:02:11,660
Dice que utilizó este
índice "BtreeCursor",

56
00:02:11,660 --> 00:02:13,550
y dice que "multikey" es falso.

57
00:02:13,550 --> 00:02:17,950
Ahora insertemos otro
documento en esta colección

58
00:02:17,950 --> 00:02:21,400
y esta vez hagamos
que "a" sea un array.

59
00:02:21,400 --> 00:02:23,905
Estamos haciendo que "a"
sea un array y haré que

60
00:02:23,905 --> 00:02:27,470
"b" sea un escalar, digamos "5".

61
00:02:27,470 --> 00:02:28,970
La inserción funcionó bien.

62
00:02:28,970 --> 00:02:31,330
Voy a regresar y hacer
de nuevo la consulta.

63
00:02:31,330 --> 00:02:33,190
Primero simplemente
haré la búsqueda.

64
00:02:33,190 --> 00:02:34,210
Todo eso está bien.

65
00:02:34,210 --> 00:02:36,020
Encontró ambos documentos.

66
00:02:36,020 --> 00:02:38,070
Ahora voy a hacer el "explain".

67
00:02:38,070 --> 00:02:40,620
Ahora las cosas están
un poco diferentes.

68
00:02:40,620 --> 00:02:43,980
Dice que "multikey"
es verdadero porque

69
00:02:43,980 --> 00:02:46,560
hay un documento
en la colección

70
00:02:46,560 --> 00:02:50,112
cuyo valor de "a" es un array
y está indexado porque hay

71
00:02:50,112 --> 00:02:51,850
un índice en "a" coma "b".

72
00:02:51,850 --> 00:02:53,940
Ahora "multikey" es verdadero.

73
00:02:53,940 --> 00:02:56,650
Y como dije anteriormente,
si vas a insertar algo en

74
00:02:56,650 --> 00:03:01,020
la colección, donde tanto
"a" y "b" son arrays,

75
00:03:01,020 --> 00:03:04,770
debido a este índice compuesto,
eso va a darte un error.

76
00:03:04,770 --> 00:03:06,670
Veámoslo fallar.

77
00:03:06,670 --> 00:03:10,710
Aquí dice que no puedo insertar
un documento cuyo valor de "a"

78
00:03:10,710 --> 00:03:13,950
es "[1, 2, 3]" y cuyo valor
de "b" es "[3, 4, 5]",

79
00:03:13,950 --> 00:03:17,410
porque no puedo indexar los
arrays paralelos "b" y "a".

80
00:03:17,410 --> 00:03:19,620
Entonces, puedes tener un
índice compuesto en "a" y "b",

81
00:03:19,620 --> 00:03:23,080
pero si en un documento,
ambos valores son arrays,

82
00:03:23,080 --> 00:03:24,150
te va a dar un error.

83
00:03:24,150 --> 00:03:27,410
Así es como funcionan
los índice multiclave.

84
00:03:27,410 --> 00:03:30,130
Es hora de hacer un cuestionario.

85
00:03:30,130 --> 00:03:32,380
Digamos que tenemos
una colección, "foo",

86
00:03:32,380 --> 00:03:34,510
que tiene un índice que fue
creado de la siguiente manera:

87
00:03:34,510 --> 00:03:39,690
"db.foo.ensureIndex({ a:1, b:1 })".
¿Cuáles de las siguientes inserciones

88
00:03:39,690 --> 00:03:41,530
son válidas para esta colección?

89
00:03:41,530 --> 00:03:44,160
No voy a enumerarlas porque
son un poco detalladas,

90
00:03:44,160 --> 00:03:46,460
pero averigua cuáles de éstas

91
00:03:46,460 --> 00:03:49,300
son válidas para la colección.
